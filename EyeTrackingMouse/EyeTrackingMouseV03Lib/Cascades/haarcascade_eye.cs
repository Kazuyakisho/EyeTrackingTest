// This file has been automatically transcribed by the
//
// Accord Vision Library
// The Accord.NET Framework
// http://accord-framework.net
//

using System.CodeDom.Compiler;
using System.Collections.Generic;
using Accord.Vision.Detection;

namespace EyeTrackingMouseV03Lib.Cascades
{
    /// <summary>
    ///   Automatically generated haar-cascade definition
    ///   to use with the Accord.NET Framework object detectors.
    /// </summary>
    /// 
    [GeneratedCode("Accord.NET HaarCascadeWriter", "2.7")]
    public class haarcascade_eye : Accord.Vision.Detection.HaarCascade
    {

        /// <summary>
        ///   Automatically generated transcription
        /// </summary>
        public haarcascade_eye()
            : base(20, 20)
        {
            List<HaarCascadeStage> stages = new List<HaarCascadeStage>();
            List<HaarFeatureNode[]> nodes;
            HaarCascadeStage stage;

            #region Stage 0
            stage = new HaarCascadeStage(-1.4562760591506958, -1, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.129639595746994, -0.77304208278656006, 0.6835014820098877, new int[] { 0, 8, 20, 12, -1 }, new int[] { 0, 14, 20, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0463268086314201, 0.57352751493453979, -0.49097689986228937, new int[] { 9, 1, 4, 15, -1 }, new int[] { 9, 6, 4, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0161730907857418, 0.6025434136390686, -0.31610709428787231, new int[] { 6, 10, 9, 2, -1 }, new int[] { 9, 10, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0458288416266441, 0.64177548885345459, -0.15545040369033811, new int[] { 7, 0, 10, 9, -1 }, new int[] { 7, 3, 10, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0537596195936203, 0.54219317436218262, -0.20480829477310181, new int[] { 12, 2, 2, 18, -1 }, new int[] { 12, 8, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0341711901128292, -0.23388190567493439, 0.48410901427268982, new int[] { 8, 6, 8, 6, -1 }, new int[] { 8, 9, 8, 3, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 1
            stage = new HaarCascadeStage(-1.2550230026245117, 0, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.2172762006521225, 0.71098899841308594, -0.59360730648040771, new int[] { 2, 0, 17, 18, -1 }, new int[] { 2, 6, 17, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0120719699189067, -0.28240481019020081, 0.59013551473617554, new int[] { 10, 10, 1, 8, -1 }, new int[] { 10, 14, 1, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0178541392087936, 0.5313752293586731, -0.2275896072387695, new int[] { 7, 10, 9, 2, -1 }, new int[] { 10, 10, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0223336108028889, -0.17556099593639371, 0.633561372756958, new int[] { 5, 1, 6, 6, -1 }, new int[] { 5, 3, 6, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.091420017182827, 0.61563092470169067, -0.16899530589580539, new int[] { 3, 1, 15, 9, -1 }, new int[] { 3, 4, 15, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.028973650187254, -0.1225007995963097, 0.74401170015335083, new int[] { 6, 3, 9, 6, -1 }, new int[] { 6, 5, 9, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0078203463926911354, 0.16974370181560519, -0.65441650152206421, new int[] { 8, 17, 6, 3, -1 }, new int[] { 10, 17, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0203404892235994, -0.12556649744510651, 0.82710450887680054, new int[] { 9, 10, 9, 1, -1 }, new int[] { 12, 10, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0119261499494314, 0.3860568106174469, -0.2099234014749527, new int[] { 1, 7, 6, 11, -1 }, new int[] { 3, 7, 2, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.000972811016254127, -0.63761192560195923, 0.129523903131485, new int[] { 9, 18, 3, 1, -1 }, new int[] { 10, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(1.8322050891583785E-05, -0.34631478786468511, 0.22924269735813141, new int[] { 16, 16, 1, 2, -1 }, new int[] { 16, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0080854417756199837, -0.63665801286697388, 0.1307865977287293, new int[] { 9, 17, 6, 3, -1 }, new int[] { 11, 17, 2, 3, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 2
            stage = new HaarCascadeStage(-1.3728189468383789, 1, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.11812269687652591, 0.67844521999359131, -0.50045782327651978, new int[] { 8, 0, 5, 18, -1 }, new int[] { 8, 6, 5, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0343327596783638, 0.6718636155128479, -0.35744878649711609, new int[] { 6, 7, 9, 7, -1 }, new int[] { 9, 7, 3, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0215307995676994, 0.72220700979232788, -0.18192419409751889, new int[] { 14, 6, 6, 10, -1 }, new int[] { 16, 6, 2, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0219099707901478, 0.66529387235641479, -0.2751022875308991, new int[] { 9, 8, 9, 5, -1 }, new int[] { 12, 8, 3, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0287135392427444, 0.69955700635910034, -0.19615580141544339, new int[] { 3, 7, 9, 6, -1 }, new int[] { 6, 7, 3, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0114674801006913, 0.59267348051071167, -0.22097350656986239, new int[] { 1, 7, 6, 6, -1 }, new int[] { 3, 7, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0226111691445112, 0.34483069181442261, -0.38379558920860291, new int[] { 16, 0, 4, 18, -1 }, new int[] { 16, 6, 4, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0019308089977130294, -0.794457197189331, 0.15628659725189209, new int[] { 0, 17, 3, 3, -1 }, new int[] { 0, 18, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.6419910833938047E-05, -0.30896010994911188, 0.3543108999729157, new int[] { 16, 0, 2, 1, -1 }, new int[] { 17, 0, 1, 1, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 3
            stage = new HaarCascadeStage(-1.2879480123519898, 2, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.1988652050495148, -0.52860701084136963, 0.35536721348762512, new int[] { 0, 8, 20, 12, -1 }, new int[] { 0, 14, 20, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0360089391469955, 0.42109689116477972, -0.393489807844162, new int[] { 6, 6, 9, 8, -1 }, new int[] { 9, 6, 3, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0775698497891426, 0.47991541028022772, -0.25122168660163879, new int[] { 5, 3, 12, 9, -1 }, new int[] { 5, 6, 12, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(8.2630853285081685E-05, -0.38475489616394037, 0.318492203950882, new int[] { 4, 16, 1, 2, -1 }, new int[] { 4, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00032773229759186506, -0.26427319645881647, 0.32547241449356079, new int[] { 18, 10, 2, 1, -1 }, new int[] { 19, 10, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0185748506337404, 0.46736589074134832, -0.15067270398139951, new int[] { 9, 8, 6, 5, -1 }, new int[] { 11, 8, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-7.0008762122597545E-05, 0.2931315004825592, -0.25365099310874939, new int[] { 0, 0, 2, 1, -1 }, new int[] { 1, 0, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0185521300882101, 0.46273660659790039, -0.13148050010204321, new int[] { 6, 8, 6, 6, -1 }, new int[] { 8, 8, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0130304200574756, 0.41627219319343572, -0.17751489579677579, new int[] { 11, 7, 6, 7, -1 }, new int[] { 13, 7, 2, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.5694141085259616E-05, -0.28035101294517523, 0.26680740714073181, new int[] { 19, 14, 1, 2, -1 }, new int[] { 19, 15, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00017005260451696813, -0.27027249336242681, 0.2398165017366409, new int[] { 6, 17, 1, 2, -1 }, new int[] { 6, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0033129199873656034, 0.44411438703536987, -0.14428889751434329, new int[] { 14, 7, 2, 7, -1 }, new int[] { 15, 7, 1, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0017583490116521716, -0.1612619012594223, 0.42940768599510187, new int[] { 6, 8, 2, 4, -1 }, new int[] { 7, 8, 1, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0251947492361069, 0.40687298774719238, -0.1820258051156998, new int[] { 5, 8, 12, 6, -1 }, new int[] { 5, 10, 12, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0014031709870323539, 0.0847597867250443, -0.8001856803894043, new int[] { 2, 17, 1, 3, -1 }, new int[] { 2, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0073991729877889156, 0.55766099691390991, -0.1184315979480743, new int[] { 6, 7, 3, 6, -1 }, new int[] { 7, 7, 1, 6, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 4
            stage = new HaarCascadeStage(-1.2179850339889526, 3, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0299430806189775, 0.35810810327529907, -0.3848763108253479, new int[] { 6, 7, 9, 12, -1 }, new int[] { 9, 7, 3, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.1256738007068634, 0.39316931366920471, -0.3001225888729096, new int[] { 6, 2, 11, 12, -1 }, new int[] { 6, 6, 11, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0053635272197425365, -0.4390861988067627, 0.1925701051950455, new int[] { 1, 12, 5, 8, -1 }, new int[] { 1, 16, 5, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0080971820279955864, 0.399066686630249, -0.23407870531082151, new int[] { 14, 7, 6, 7, -1 }, new int[] { 16, 7, 2, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0165979098528624, 0.42095288634300232, -0.22674840688705439, new int[] { 10, 8, 6, 6, -1 }, new int[] { 12, 8, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0020199299324303865, -0.74156731367111206, 0.12601189315319061, new int[] { 16, 18, 4, 2, -1 }, new int[] { 16, 19, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0015202340437099338, -0.76154601573944092, 0.0863736122846603, new int[] { 18, 17, 2, 3, -1 }, new int[] { 18, 18, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0049663940444588661, 0.42182239890098572, -0.17904919385910029, new int[] { 9, 7, 3, 7, -1 }, new int[] { 10, 7, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0192076005041599, 0.46894899010658259, -0.1437875032424927, new int[] { 5, 6, 6, 8, -1 }, new int[] { 7, 6, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0122226802632213, 0.32842078804969788, -0.218021497130394, new int[] { 2, 6, 6, 11, -1 }, new int[] { 4, 6, 2, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0575486682355404, -0.36768808960914612, 0.24357110261917109, new int[] { 8, 10, 12, 8, -1 }, new int[] { 8, 14, 12, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00957940798252821, -0.72245067358016968, 0.0636645630002022, new int[] { 7, 17, 6, 3, -1 }, new int[] { 9, 17, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029545740690082312, 0.358464390039444, -0.1669632941484451, new int[] { 10, 9, 3, 3, -1 }, new int[] { 11, 9, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0042017991654574871, 0.390948086977005, -0.1204179003834724, new int[] { 8, 8, 3, 6, -1 }, new int[] { 9, 8, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0136249903589487, -0.58767718076705933, 0.0884047299623489, new int[] { 7, 0, 6, 5, -1 }, new int[] { 9, 0, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.2853112467564642E-05, -0.26348459720611572, 0.21419279277324679, new int[] { 6, 17, 1, 3, -1 }, new int[] { 6, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0026782939676195383, -0.78390169143676758, 0.0805269628763199, new int[] { 0, 18, 4, 2, -1 }, new int[] { 0, 19, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0705971792340279, 0.414692610502243, -0.1398995965719223, new int[] { 4, 1, 11, 9, -1 }, new int[] { 4, 4, 11, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0920936465263367, -0.13055180013179779, 0.50435781478881836, new int[] { 3, 1, 14, 9, -1 }, new int[] { 3, 4, 14, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0088004386052489281, 0.36609750986099238, -0.1403664946556091, new int[] { 0, 9, 6, 4, -1 }, new int[] { 2, 9, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.50809776945971E-05, -0.29704439640045172, 0.207029402256012, new int[] { 18, 13, 1, 2, -1 }, new int[] { 18, 14, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029870450962334871, 0.35615700483322138, -0.1544596999883652, new int[] { 13, 5, 3, 11, -1 }, new int[] { 14, 5, 1, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0026441509835422039, -0.54353517293930054, 0.10295110195875171, new int[] { 0, 18, 8, 2, -1 }, new int[] { 0, 18, 4, 1, 2 }, new int[] { 4, 19, 4, 1, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 5
            stage = new HaarCascadeStage(-1.2905240058898926, 4, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0478624701499939, 0.41528239846229548, -0.34185820817947388, new int[] { 5, 8, 12, 5, -1 }, new int[] { 9, 8, 4, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.087350532412529, -0.38749781250953669, 0.2420420050621033, new int[] { 4, 7, 11, 10, -1 }, new int[] { 4, 12, 11, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0168494991958141, 0.53082478046417236, -0.1728291064500809, new int[] { 14, 9, 6, 4, -1 }, new int[] { 16, 9, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0288700293749571, 0.35843509435653692, -0.2240259051322937, new int[] { 0, 7, 6, 8, -1 }, new int[] { 3, 7, 3, 8, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00256793899461627, 0.14990499615669251, -0.65609407424926758, new int[] { 0, 16, 3, 3, -1 }, new int[] { 0, 17, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0241166595369577, 0.55889678001403809, -0.148102805018425, new int[] { 7, 11, 12, 1, -1 }, new int[] { 11, 11, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0328266583383083, 0.4646868109703064, -0.10785529762506491, new int[] { 4, 8, 9, 4, -1 }, new int[] { 7, 8, 3, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0152330603450537, -0.73954427242279053, 0.056236881762743, new int[] { 5, 16, 6, 4, -1 }, new int[] { 7, 16, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00030209511169232428, -0.45548820495605469, 0.0970698371529579, new int[] { 18, 17, 1, 3, -1 }, new int[] { 18, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00075365108205005527, 0.0951472967863083, -0.5489501953125, new int[] { 18, 17, 1, 3, -1 }, new int[] { 18, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0106389503926039, 0.40912970900535578, -0.1230840981006622, new int[] { 4, 9, 4, 10, -1 }, new int[] { 4, 9, 2, 5, 2 }, new int[] { 6, 14, 2, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0075217830017209053, 0.40289148688316351, -0.16048780083656311, new int[] { 4, 8, 6, 4, -1 }, new int[] { 6, 8, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.1067709997296333, 0.61759322881698608, -0.0730911865830421, new int[] { 10, 2, 2, 18, -1 }, new int[] { 10, 8, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0162569191306829, -0.13103680312633509, 0.37453651428222662, new int[] { 0, 5, 8, 6, -1 }, new int[] { 0, 5, 4, 3, 2 }, new int[] { 4, 8, 4, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.020679360255599, -0.71402907371521, 0.0523900091648102, new int[] { 6, 0, 6, 5, -1 }, new int[] { 8, 0, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0170523691922426, 0.12822860479354861, -0.31080681085586548, new int[] { 18, 0, 2, 14, -1 }, new int[] { 18, 7, 2, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0057122060097754, -0.605565071105957, 0.0818847566843033, new int[] { 8, 18, 4, 2, -1 }, new int[] { 10, 18, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(2.0851430235779844E-05, -0.26812988519668579, 0.1445384025573731, new int[] { 1, 17, 6, 3, -1 }, new int[] { 1, 18, 6, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0079284431412816048, -0.078795351088047, 0.56762582063674927, new int[] { 11, 8, 3, 5, -1 }, new int[] { 12, 8, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0025217379443347454, 0.37068629264831537, -0.1362057030200958, new int[] { 11, 8, 3, 4, -1 }, new int[] { 12, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0224261991679668, -0.6870499849319458, 0.0510628595948219, new int[] { 11, 0, 6, 5, -1 }, new int[] { 13, 0, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0076451441273093224, 0.2349222004413605, -0.1790595948696137, new int[] { 1, 7, 6, 7, -1 }, new int[] { 3, 7, 2, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0011175329564139247, -0.59869050979614258, 0.0743244364857674, new int[] { 0, 13, 1, 3, -1 }, new int[] { 0, 14, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0192127898335457, -0.15702550113201141, 0.29737469553947449, new int[] { 3, 2, 9, 6, -1 }, new int[] { 3, 4, 9, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00562934298068285, -0.0997690185904503, 0.42130270600318909, new int[] { 8, 6, 9, 2, -1 }, new int[] { 8, 7, 9, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00956718623638153, -0.60858798027038574, 0.0735062584280968, new int[] { 0, 14, 3, 6, -1 }, new int[] { 0, 16, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0112179601565003, -0.103208102285862, 0.41909849643707281, new int[] { 1, 11, 6, 4, -1 }, new int[] { 3, 11, 2, 4, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 6
            stage = new HaarCascadeStage(-1.1600480079650879, 5, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0174864400178194, 0.3130728006362915, -0.33681181073188782, new int[] { 6, 9, 9, 3, -1 }, new int[] { 9, 9, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0307146497070789, -0.18766190111637121, 0.53780800104141235, new int[] { 6, 0, 9, 6, -1 }, new int[] { 6, 2, 9, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0221887193620205, 0.36637881398200989, -0.1612481027841568, new int[] { 8, 5, 6, 6, -1 }, new int[] { 8, 7, 6, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-5.0700771680567414E-05, 0.21245710551738739, -0.28444620966911321, new int[] { 1, 12, 2, 1, -1 }, new int[] { 2, 12, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0070170420221984386, 0.39543110132217407, -0.1317359060049057, new int[] { 10, 10, 6, 2, -1 }, new int[] { 12, 10, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00685636093840003, 0.30373859405517578, -0.20657819509506231, new int[] { 13, 8, 6, 6, -1 }, new int[] { 15, 8, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0141292596235871, -0.76503008604049683, 0.0982131883502007, new int[] { 6, 16, 6, 4, -1 }, new int[] { 8, 16, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.047915481030941, 0.483073890209198, -0.1300680935382843, new int[] { 8, 0, 9, 9, -1 }, new int[] { 8, 3, 9, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(4.7032979637151584E-05, -0.25216570496559138, 0.24386680126190191, new int[] { 18, 17, 1, 3, -1 }, new int[] { 18, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0010221180273219943, 0.0688576027750969, -0.65861141681671143, new int[] { 18, 17, 1, 3, -1 }, new int[] { 18, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0026056109927594662, 0.42942029237747192, -0.13022460043430331, new int[] { 7, 10, 3, 3, -1 }, new int[] { 8, 10, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.450534081319347E-05, -0.19288620352745059, 0.28958499431610107, new int[] { 9, 14, 2, 2, -1 }, new int[] { 9, 14, 1, 1, 2 }, new int[] { 10, 15, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-6.6721157054416835E-05, 0.30290710926055908, -0.19854369759559631, new int[] { 9, 14, 2, 2, -1 }, new int[] { 9, 14, 1, 1, 2 }, new int[] { 10, 15, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.26281431317329412, -0.2329394072294235, 0.2369246035814285, new int[] { 0, 8, 19, 12, -1 }, new int[] { 0, 14, 19, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0235696695744991, 0.1940104067325592, -0.28484618663787842, new int[] { 7, 6, 9, 14, -1 }, new int[] { 10, 6, 3, 14, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0039120172150433064, 0.55378979444503784, -0.0956656783819199, new int[] { 13, 8, 3, 4, -1 }, new int[] { 14, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.0788799853762612E-05, -0.239126592874527, 0.217994898557663, new int[] { 4, 17, 1, 3, -1 }, new int[] { 4, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0078732017427682877, 0.40697428584098821, -0.1276804059743881, new int[] { 4, 9, 6, 3, -1 }, new int[] { 6, 9, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0016778609715402126, -0.5774465799331665, 0.0973247885704041, new int[] { 2, 18, 5, 2, -1 }, new int[] { 2, 19, 5, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00026832430739887059, 0.29021880030632019, -0.16831269860267639, new int[] { 7, 8, 2, 2, -1 }, new int[] { 7, 8, 1, 1, 2 }, new int[] { 8, 9, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.8687182394787669E-05, -0.1955157071352005, 0.2772096991539002, new int[] { 7, 8, 2, 2, -1 }, new int[] { 7, 8, 1, 1, 2 }, new int[] { 8, 9, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0129535002633929, -0.0968383178114891, 0.40323871374130249, new int[] { 5, 10, 13, 2, -1 }, new int[] { 5, 11, 13, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0130439596250653, 0.47198569774627691, -0.0892875492572784, new int[] { 10, 8, 1, 9, -1 }, new int[] { 10, 11, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0030261781066656113, -0.13623380661010739, 0.30686271190643311, new int[] { 15, 8, 2, 12, -1 }, new int[] { 15, 8, 1, 6, 2 }, new int[] { 16, 14, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0060438038781285286, -0.779541015625, 0.0573163107037544, new int[] { 4, 0, 3, 5, -1 }, new int[] { 5, 0, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0022507249377667904, 0.30877059698104858, -0.1500630974769592, new int[] { 12, 6, 3, 7, -1 }, new int[] { 13, 6, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0158268101513386, 0.0645518898963928, -0.72455567121505737, new int[] { 7, 16, 6, 4, -1 }, new int[] { 9, 16, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.5864507632795721E-05, -0.1759884059429169, 0.23210389912128451, new int[] { 9, 16, 2, 1, -1 }, new int[] { 10, 16, 1, 1, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 7
            stage = new HaarCascadeStage(-1.2257250547409058, 6, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0278548691421747, 0.45518448948860168, -0.1809991002082825, new int[] { 6, 10, 9, 2, -1 }, new int[] { 9, 10, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.1289504021406174, -0.52565532922744751, 0.16188900172710419, new int[] { 0, 6, 15, 14, -1 }, new int[] { 0, 13, 15, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0244031809270382, -0.14974960684776309, 0.42357379198074341, new int[] { 9, 1, 5, 6, -1 }, new int[] { 9, 3, 5, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0024458570405840874, 0.32948669791221619, -0.17447690665721891, new int[] { 3, 9, 3, 4, -1 }, new int[] { 4, 9, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0035336529836058617, 0.4742664098739624, -0.0736183598637581, new int[] { 5, 7, 3, 6, -1 }, new int[] { 6, 7, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.1358150813030079E-05, -0.30421930551528931, 0.15633270144462591, new int[] { 17, 16, 1, 2, -1 }, new int[] { 17, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0162256807088852, 0.23002180457115171, -0.2035982012748718, new int[] { 9, 8, 6, 12, -1 }, new int[] { 11, 8, 2, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0046007009223103523, 0.40459269285202032, -0.13485440611839289, new int[] { 6, 10, 6, 1, -1 }, new int[] { 8, 10, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0219289995729923, -0.68724489212036133, 0.0806842669844627, new int[] { 7, 17, 9, 3, -1 }, new int[] { 10, 17, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0028971210122108459, -0.69619607925415039, 0.0485452190041542, new int[] { 14, 18, 6, 2, -1 }, new int[] { 14, 19, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0044074649922549725, 0.2516626119613648, -0.16236649453639981, new int[] { 9, 5, 3, 14, -1 }, new int[] { 10, 5, 1, 14, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0284371692687273, 0.0603942610323429, -0.66744458675384521, new int[] { 8, 16, 9, 4, -1 }, new int[] { 11, 16, 3, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0832128822803497, 0.0643579214811325, -0.53626042604446411, new int[] { 0, 0, 4, 14, -1 }, new int[] { 0, 7, 4, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0124193299561739, -0.708168625831604, 0.0575266107916832, new int[] { 8, 1, 6, 3, -1 }, new int[] { 10, 1, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0046992599964141846, 0.51254332065582275, -0.0873508006334305, new int[] { 6, 8, 3, 4, -1 }, new int[] { 7, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00078025809489190578, 0.266876608133316, -0.17961509525775909, new int[] { 4, 8, 3, 4, -1 }, new int[] { 5, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0197243392467499, -0.67563730478286743, 0.0729419067502022, new int[] { 5, 1, 6, 5, -1 }, new int[] { 7, 1, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0010269250487908721, 0.0539193190634251, -0.55540180206298828, new int[] { 1, 18, 1, 2, -1 }, new int[] { 1, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0259571895003319, 0.5636252760887146, -0.0718983933329582, new int[] { 7, 0, 6, 6, -1 }, new int[] { 7, 2, 6, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0012552699772641063, -0.50346630811691284, 0.0896914526820183, new int[] { 0, 18, 4, 2, -1 }, new int[] { 0, 19, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0499705784022808, 0.17685119807720179, -0.22301959991455081, new int[] { 12, 3, 8, 12, -1 }, new int[] { 12, 7, 8, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029899610672146082, 0.391224205493927, -0.1014975011348724, new int[] { 12, 9, 3, 4, -1 }, new int[] { 13, 9, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.004854684229940176, -0.1177017986774445, 0.4219093918800354, new int[] { 12, 8, 3, 5, -1 }, new int[] { 13, 8, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0001044886012095958, -0.17333979904651639, 0.223444402217865, new int[] { 16, 0, 2, 1, -1 }, new int[] { 17, 0, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.9689260524464771E-05, -0.2340963035821915, 0.1655824035406113, new int[] { 5, 17, 1, 3, -1 }, new int[] { 5, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0134239196777344, 0.43023818731307978, -0.0997236520051956, new int[] { 10, 2, 3, 6, -1 }, new int[] { 10, 4, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0022581999655812979, 0.0727209895849228, -0.57501018047332764, new int[] { 4, 17, 2, 3, -1 }, new int[] { 4, 18, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0125462803989649, 0.36184579133987432, -0.1145701035857201, new int[] { 12, 7, 1, 9, -1 }, new int[] { 12, 10, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0028705769218504429, 0.28210538625717158, -0.1236755028367043, new int[] { 7, 6, 3, 9, -1 }, new int[] { 8, 6, 1, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0197856407612562, 0.0478767491877079, -0.806662380695343, new int[] { 17, 13, 3, 6, -1 }, new int[] { 17, 15, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.004758893046528101, -0.1092538982629776, 0.33746978640556341, new int[] { 7, 7, 3, 8, -1 }, new int[] { 8, 7, 1, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0069974269717931747, -0.8029593825340271, 0.0457067005336285, new int[] { 5, 0, 3, 5, -1 }, new int[] { 6, 0, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0130334803834558, 0.18680439889431, -0.176889106631279, new int[] { 4, 6, 9, 8, -1 }, new int[] { 7, 6, 3, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0013742579612880945, 0.27725479006767267, -0.1280900985002518, new int[] { 2, 9, 3, 3, -1 }, new int[] { 3, 9, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0027657810132950544, 0.0907589420676231, -0.4259473979473114, new int[] { 16, 18, 4, 2, -1 }, new int[] { 16, 19, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00028941841446794569, -0.388163298368454, 0.089267797768116, new int[] { 17, 10, 3, 10, -1 }, new int[] { 17, 15, 3, 5, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 8
            stage = new HaarCascadeStage(-1.2863140106201172, 7, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0144692296162248, 0.37507829070091248, -0.2492828965187073, new int[] { 8, 9, 6, 4, -1 }, new int[] { 10, 9, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.1331762969493866, 0.30166378617286682, -0.2241407036781311, new int[] { 5, 2, 10, 12, -1 }, new int[] { 5, 6, 10, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.010132160037756, 0.36985591053962708, -0.17850010097026831, new int[] { 6, 9, 6, 3, -1 }, new int[] { 8, 9, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0078511182218790054, 0.46086761355400091, -0.12931390106678009, new int[] { 11, 7, 3, 7, -1 }, new int[] { 12, 7, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0142958397045732, 0.44841429591178888, -0.1022624000906944, new int[] { 12, 8, 6, 4, -1 }, new int[] { 14, 8, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0059606940485537052, 0.279279887676239, -0.15323829650878909, new int[] { 14, 8, 6, 5, -1 }, new int[] { 16, 8, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.010932769626379, -0.15141740441322329, 0.3988964855670929, new int[] { 12, 12, 2, 4, -1 }, new int[] { 12, 14, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.0430990086169913E-05, -0.22681570053100589, 0.21644389629364011, new int[] { 3, 15, 1, 2, -1 }, new int[] { 3, 16, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0058431681245565414, 0.45420148968696589, -0.12587159872055051, new int[] { 12, 7, 3, 4, -1 }, new int[] { 13, 7, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0223462097346783, -0.62690192461013794, 0.0824031233787537, new int[] { 10, 0, 6, 6, -1 }, new int[] { 12, 0, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00488366698846221, 0.26359251141548162, -0.14686630666255951, new int[] { 10, 6, 3, 8, -1 }, new int[] { 11, 6, 1, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.550600275862962E-05, -0.2450702041387558, 0.1667888015508652, new int[] { 16, 17, 1, 2, -1 }, new int[] { 16, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00049026997294276953, -0.426499605178833, 0.0899735614657402, new int[] { 16, 16, 1, 3, -1 }, new int[] { 16, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0014861579984426498, -0.1204025000333786, 0.30097651481628418, new int[] { 11, 11, 1, 2, -1 }, new int[] { 11, 12, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0119883399456739, 0.278524786233902, -0.122443400323391, new int[] { 3, 7, 6, 9, -1 }, new int[] { 5, 7, 2, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0105022396892309, 0.0404527597129345, -0.74050408601760864, new int[] { 4, 18, 9, 1, -1 }, new int[] { 7, 18, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0309630092233419, -0.62842690944671631, 0.048013761639595, new int[] { 0, 11, 4, 9, -1 }, new int[] { 0, 14, 4, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0114145204424858, 0.0394052118062973, -0.71674120426177979, new int[] { 9, 17, 6, 3, -1 }, new int[] { 11, 17, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0123370001092553, 0.1994132995605469, -0.19274300336837771, new int[] { 7, 8, 6, 12, -1 }, new int[] { 9, 8, 2, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0059942267835140228, 0.51318162679672241, -0.0616580583155155, new int[] { 6, 8, 3, 4, -1 }, new int[] { 7, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0011923230485990644, -0.72605299949646, 0.0506527200341225, new int[] { 3, 17, 1, 3, -1 }, new int[] { 3, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0074582789093256, 0.29603078961372381, -0.1175478994846344, new int[] { 11, 9, 6, 4, -1 }, new int[] { 13, 9, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0027877509128302336, 0.0450687110424042, -0.69535410404205322, new int[] { 6, 1, 3, 2, -1 }, new int[] { 7, 1, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00022503209766000509, 0.200472503900528, -0.15775249898433691, new int[] { 1, 0, 2, 1, -1 }, new int[] { 2, 0, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0050367889925837517, 0.292998194694519, -0.11700499802827841, new int[] { 1, 0, 2, 14, -1 }, new int[] { 1, 0, 1, 7, 2 }, new int[] { 2, 7, 1, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0747421607375145, -0.1139231994748116, 0.30256620049476618, new int[] { 5, 5, 11, 8, -1 }, new int[] { 5, 9, 11, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0202555190771818, -0.1051589027047157, 0.4067046046257019, new int[] { 9, 3, 5, 6, -1 }, new int[] { 9, 5, 5, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0442145094275475, -0.27631640434265142, 0.12363869696855551, new int[] { 7, 9, 5, 10, -1 }, new int[] { 7, 14, 5, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00087259558495134115, 0.2435503005981445, -0.13300949335098269, new int[] { 15, 10, 2, 2, -1 }, new int[] { 16, 10, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0024453739169985056, -0.53866171836853027, 0.062510646879673, new int[] { 0, 18, 8, 2, -1 }, new int[] { 0, 19, 8, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(8.27253534225747E-05, -0.20772209763526919, 0.1627043932676315, new int[] { 7, 17, 1, 3, -1 }, new int[] { 7, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.036627110093832, 0.36568409204483032, -0.0903302803635597, new int[] { 7, 2, 11, 6, -1 }, new int[] { 7, 4, 11, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0030996399000287056, -0.1318302005529404, 0.25354298949241638, new int[] { 8, 3, 9, 3, -1 }, new int[] { 8, 4, 9, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0024709280114620924, -0.5685349702835083, 0.0535054318606853, new int[] { 0, 9, 2, 2, -1 }, new int[] { 0, 10, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0141146704554558, -0.48599010705947882, 0.0584852509200573, new int[] { 0, 5, 3, 6, -1 }, new int[] { 0, 7, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00084537261864170432, -0.0800936371088028, 0.40265649557113647, new int[] { 6, 7, 2, 2, -1 }, new int[] { 6, 7, 1, 1, 2 }, new int[] { 7, 8, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0071098632179200649, 0.4470323920249939, -0.0629474371671677, new int[] { 7, 6, 3, 6, -1 }, new int[] { 8, 6, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0191259607672691, -0.66422867774963379, 0.0498227700591087, new int[] { 12, 1, 6, 4, -1 }, new int[] { 14, 1, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0050773010589182377, 0.17379400134086609, -0.168505996465683, new int[] { 9, 11, 6, 8, -1 }, new int[] { 11, 11, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029198289848864079, -0.60110282897949219, 0.0574279390275478, new int[] { 17, 15, 3, 3, -1 }, new int[] { 17, 16, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0249021500349045, 0.233979806303978, -0.11818459630012509, new int[] { 6, 6, 3, 9, -1 }, new int[] { 6, 9, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.02014777995646, -0.0894598215818405, 0.36024400591850281, new int[] { 0, 5, 8, 6, -1 }, new int[] { 0, 5, 4, 3, 2 }, new int[] { 4, 8, 4, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.001759764039888978, 0.0494584403932095, -0.63102620840072632, new int[] { 0, 6, 1, 3, -1 }, new int[] { 0, 7, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0013812039978802204, -0.15218059718608859, 0.18971739709377289, new int[] { 17, 0, 2, 6, -1 }, new int[] { 18, 0, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0109045403078198, -0.58097380399703979, 0.0448627285659313, new int[] { 10, 17, 6, 3, -1 }, new int[] { 12, 17, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.5157178798690438E-05, -0.13777349889278409, 0.1954316049814224, new int[] { 13, 15, 2, 2, -1 }, new int[] { 13, 15, 1, 1, 2 }, new int[] { 14, 16, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0038649770431220531, -0.1030222997069359, 0.25374969840049738, new int[] { 4, 0, 12, 3, -1 }, new int[] { 4, 1, 12, 1, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 9
            stage = new HaarCascadeStage(-1.1189440488815308, 8, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.102158896625042, 0.4168125987052918, -0.1665562987327576, new int[] { 5, 3, 10, 9, -1 }, new int[] { 5, 6, 10, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.051939819008112, 0.33023950457572943, -0.20715710520744321, new int[] { 7, 7, 9, 7, -1 }, new int[] { 10, 7, 3, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0427177809178829, 0.26093730330467219, -0.16013890504837039, new int[] { 5, 8, 9, 6, -1 }, new int[] { 8, 8, 3, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00043890418601222336, -0.34750530123710632, 0.13918919861316681, new int[] { 0, 16, 6, 2, -1 }, new int[] { 0, 17, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0242643896490335, -0.42552059888839722, 0.13578380644321439, new int[] { 12, 6, 7, 14, -1 }, new int[] { 12, 13, 7, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0238205995410681, 0.31749808788299561, -0.16652040183544159, new int[] { 13, 7, 6, 8, -1 }, new int[] { 15, 7, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0070518180727958679, 0.30947178602218628, -0.13338300585746771, new int[] { 2, 10, 6, 3, -1 }, new int[] { 4, 10, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00068517157342284918, -0.60082262754440308, 0.0877470001578331, new int[] { 18, 17, 1, 3, -1 }, new int[] { 18, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0053705149330198765, -0.1231144964694977, 0.38333550095558172, new int[] { 7, 1, 6, 2, -1 }, new int[] { 7, 2, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0134035395458341, 0.3387736976146698, -0.1014048978686333, new int[] { 6, 0, 6, 4, -1 }, new int[] { 6, 2, 6, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.006685636006295681, -0.61193597316741943, 0.0477402210235596, new int[] { 8, 18, 6, 2, -1 }, new int[] { 10, 18, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0042887418530881405, 0.25275790691375732, -0.14434510469436651, new int[] { 7, 6, 5, 2, -1 }, new int[] { 7, 7, 5, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0108767496421933, 0.54775732755661011, -0.0594554804265499, new int[] { 6, 7, 3, 6, -1 }, new int[] { 7, 7, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00037882640026509762, 0.0834103003144264, -0.44226369261741638, new int[] { 18, 18, 2, 2, -1 }, new int[] { 18, 18, 1, 1, 2 }, new int[] { 19, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.002455014968290925, 0.23330999910831449, -0.1396448016166687, new int[] { 16, 8, 3, 7, -1 }, new int[] { 17, 8, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0012721839593723416, 0.0604802891612053, -0.49456089735031128, new int[] { 0, 16, 2, 3, -1 }, new int[] { 0, 17, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0048933159559965134, -0.66833269596099854, 0.0462184995412827, new int[] { 5, 19, 6, 1, -1 }, new int[] { 7, 19, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0264499895274639, -0.0732353627681732, 0.44425961375236511, new int[] { 9, 5, 6, 6, -1 }, new int[] { 9, 7, 6, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0033706070389598608, -0.42464339733123779, 0.0686765611171722, new int[] { 0, 10, 2, 4, -1 }, new int[] { 0, 12, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029559480026364326, 0.16218039393424991, -0.18222999572753909, new int[] { 0, 9, 4, 3, -1 }, new int[] { 2, 9, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0306199099868536, -0.0586433410644531, 0.532636284828186, new int[] { 1, 10, 6, 9, -1 }, new int[] { 3, 10, 2, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0095765907317399979, -0.60562682151794434, 0.0533459894359112, new int[] { 9, 0, 6, 2, -1 }, new int[] { 11, 0, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.6372493165545166E-05, -0.16680839657783511, 0.1928416043519974, new int[] { 14, 1, 2, 1, -1 }, new int[] { 15, 1, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0050975950434803963, 0.0441195107996464, -0.574588418006897, new int[] { 0, 8, 1, 4, -1 }, new int[] { 0, 10, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00037112718564458191, -0.1108639985322952, 0.2310539036989212, new int[] { 15, 6, 2, 2, -1 }, new int[] { 15, 6, 1, 1, 2 }, new int[] { 16, 7, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0086607588455080986, 0.40456289052963262, -0.062446091324091, new int[] { 7, 5, 3, 6, -1 }, new int[] { 8, 5, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00087489158613607287, 0.0648751482367516, -0.44871041178703308, new int[] { 19, 17, 1, 3, -1 }, new int[] { 19, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0011120870476588607, -0.09386146068573, 0.30453911423683172, new int[] { 7, 10, 3, 1, -1 }, new int[] { 8, 10, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0238378196954727, -0.58887428045272827, 0.0466594211757183, new int[] { 12, 1, 6, 6, -1 }, new int[] { 14, 1, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00022272899514064193, -0.14898599684238431, 0.17701950669288641, new int[] { 15, 5, 2, 1, -1 }, new int[] { 16, 5, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0244674701243639, -0.0557896010577679, 0.49208301305770868, new int[] { 8, 2, 7, 4, -1 }, new int[] { 8, 4, 7, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.14239320158958441, 0.15192000567913061, -0.18778899312019351, new int[] { 4, 0, 14, 15, -1 }, new int[] { 4, 5, 14, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0201231203973293, 0.21780100464820859, -0.1208190023899078, new int[] { 7, 8, 6, 6, -1 }, new int[] { 9, 8, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00011513679783092812, -0.16856589913368231, 0.1645192950963974, new int[] { 11, 17, 1, 3, -1 }, new int[] { 11, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0027556740678846836, -0.69442039728164673, 0.039449468255043, new int[] { 12, 16, 2, 4, -1 }, new int[] { 12, 16, 1, 2, 2 }, new int[] { 13, 18, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-7.5843912782147527E-05, 0.18941369652748111, -0.151838406920433, new int[] { 10, 13, 2, 1, -1 }, new int[] { 11, 13, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0070697711780667305, 0.47064599394798279, -0.0579276196658611, new int[] { 11, 8, 3, 3, -1 }, new int[] { 12, 8, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0373931787908077, -0.75892448425292969, 0.0341160483658314, new int[] { 2, 0, 6, 8, -1 }, new int[] { 4, 0, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0159956105053425, 0.30670469999313349, -0.0875255763530731, new int[] { 3, 5, 6, 6, -1 }, new int[] { 3, 5, 3, 3, 2 }, new int[] { 6, 8, 3, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0031183990649878979, 0.26195371150970459, -0.0912148877978325, new int[] { 10, 8, 3, 3, -1 }, new int[] { 11, 8, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0010651360498741269, -0.1742756068706513, 0.15277640521526339, new int[] { 5, 17, 4, 2, -1 }, new int[] { 5, 18, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0016029420075938106, 0.35612630844116211, -0.0766299962997437, new int[] { 8, 16, 5, 2, -1 }, new int[] { 8, 17, 5, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0043619908392429352, 0.04935697093606, -0.59228771924972534, new int[] { 0, 4, 3, 3, -1 }, new int[] { 0, 5, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0107799097895622, -0.63922178745269775, 0.0332045406103134, new int[] { 6, 3, 6, 2, -1 }, new int[] { 8, 3, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0043590869754552841, 0.1610738933086395, -0.1522132009267807, new int[] { 4, 4, 9, 3, -1 }, new int[] { 7, 4, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0074596069753170013, 0.0331729613244534, -0.75007742643356323, new int[] { 0, 13, 1, 4, -1 }, new int[] { 0, 15, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0081385448575019836, 0.0263252798467875, -0.71731162071228027, new int[] { 0, 17, 8, 3, -1 }, new int[] { 0, 18, 8, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0333384908735752, 0.33536610007286072, -0.070803590118885, new int[] { 6, 1, 11, 6, -1 }, new int[] { 6, 3, 11, 2, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 10
            stage = new HaarCascadeStage(-1.1418989896774292, 9, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.0195539798587561, -0.1043972000479698, 0.53128951787948608, new int[] { 4, 10, 6, 2, -1 }, new int[] { 6, 10, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0221229195594788, -0.24747270345687869, 0.20847250521183011, new int[] { 10, 8, 1, 12, -1 }, new int[] { 10, 14, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0041829389519989491, 0.38289439678192139, -0.1471157968044281, new int[] { 5, 8, 3, 4, -1 }, new int[] { 6, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00086381728760898113, -0.62632888555526733, 0.1199325993657112, new int[] { 0, 17, 1, 3, -1 }, new int[] { 0, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00079958612332120538, 0.0925734713673592, -0.55168831348419189, new int[] { 0, 17, 1, 3, -1 }, new int[] { 0, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.009152757003903389, -0.0729298070073128, 0.55512511730194092, new int[] { 13, 8, 3, 4, -1 }, new int[] { 14, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0039388681761920452, 0.20196039974689481, -0.20912039279937741, new int[] { 1, 5, 5, 4, -1 }, new int[] { 1, 7, 5, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00014613410166930407, -0.278618186712265, 0.13817410171031949, new int[] { 18, 14, 1, 2, -1 }, new int[] { 18, 15, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0031691689509898424, 0.36685898900032038, -0.0763082429766655, new int[] { 13, 8, 2, 4, -1 }, new int[] { 14, 8, 1, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0221893899142742, 0.39096599817276, -0.1097154021263123, new int[] { 10, 6, 6, 8, -1 }, new int[] { 12, 6, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0074523608200252056, 0.12838590145111081, -0.2415986955165863, new int[] { 8, 6, 6, 10, -1 }, new int[] { 10, 6, 2, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.000779970025178045, 0.0719780698418617, -0.43976500630378718, new int[] { 17, 16, 1, 3, -1 }, new int[] { 17, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0046783639118075371, 0.2156984955072403, -0.14205920696258551, new int[] { 1, 7, 2, 10, -1 }, new int[] { 2, 7, 1, 10, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0151886399835348, 0.364587813615799, -0.08267592638731, new int[] { 5, 9, 6, 3, -1 }, new int[] { 7, 9, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0050619798712432384, -0.34380409121513372, 0.0920682325959206, new int[] { 0, 8, 5, 12, -1 }, new int[] { 0, 14, 5, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017351920250803232, -0.61725497245788574, 0.0492144785821438, new int[] { 0, 11, 1, 3, -1 }, new int[] { 0, 12, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.012423450127244, -0.58558952808380127, 0.0461126007139683, new int[] { 6, 16, 6, 4, -1 }, new int[] { 8, 16, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0130314296111465, -0.59710788726806641, 0.0406724587082863, new int[] { 0, 6, 2, 6, -1 }, new int[] { 0, 8, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0012369629694148898, -0.68334168195724487, 0.0331561788916588, new int[] { 11, 18, 2, 1, -1 }, new int[] { 12, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0061022108420729637, -0.0947292372584343, 0.30102241039276117, new int[] { 5, 1, 9, 2, -1 }, new int[] { 5, 2, 9, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00066952849738299847, 0.0818168669939041, -0.351960301399231, new int[] { 0, 0, 1, 2, -1 }, new int[] { 0, 1, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017970580374822021, 0.23718979954719541, -0.1176870986819267, new int[] { 15, 9, 3, 3, -1 }, new int[] { 16, 9, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00071074528386816382, -0.4476378858089447, 0.0576824806630611, new int[] { 18, 16, 1, 3, -1 }, new int[] { 18, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0059126471169292927, 0.43425410985946661, -0.0668685734272003, new int[] { 11, 10, 6, 1, -1 }, new int[] { 13, 10, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0033132149837911129, 0.181500107049942, -0.1418032050132752, new int[] { 1, 3, 4, 4, -1 }, new int[] { 3, 3, 2, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0608146600425243, 0.47221711277961731, -0.0614106394350529, new int[] { 11, 2, 1, 18, -1 }, new int[] { 11, 8, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0967141836881638, 0.27683168649673462, -0.0944900363683701, new int[] { 9, 1, 5, 12, -1 }, new int[] { 9, 5, 5, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0039073550142347813, -0.1227853000164032, 0.21057400107383731, new int[] { 12, 0, 8, 1, -1 }, new int[] { 16, 0, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0090431869029998779, 0.35641568899154658, -0.0778062269091606, new int[] { 8, 6, 3, 10, -1 }, new int[] { 9, 6, 1, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0048800031654536724, -0.41034790873527532, 0.0696943774819374, new int[] { 19, 2, 1, 6, -1 }, new int[] { 19, 4, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00435474282130599, -0.73017889261245728, 0.0366551503539085, new int[] { 18, 6, 2, 2, -1 }, new int[] { 18, 7, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.009650062769651413, 0.55181127786636353, -0.0531680807471275, new int[] { 7, 7, 3, 4, -1 }, new int[] { 8, 7, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0173973105847836, -0.57084232568740845, 0.0502140894532204, new int[] { 5, 0, 6, 5, -1 }, new int[] { 7, 0, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0068304329179227352, -0.46180281043052668, 0.0502026900649071, new int[] { 0, 3, 7, 3, -1 }, new int[] { 0, 4, 7, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00033255619928240776, -0.0953627303242683, 0.25983759760856628, new int[] { 1, 6, 2, 1, -1 }, new int[] { 2, 6, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0023100529797375202, 0.2287247031927109, -0.1053353026509285, new int[] { 4, 8, 2, 10, -1 }, new int[] { 4, 8, 1, 5, 2 }, new int[] { 5, 13, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0075426651164889336, -0.56990510225296021, 0.0488634593784809, new int[] { 2, 18, 18, 2, -1 }, new int[] { 2, 18, 9, 1, 2 }, new int[] { 11, 19, 9, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0052723060362041, 0.3514518141746521, -0.0823901072144508, new int[] { 2, 7, 4, 4, -1 }, new int[] { 2, 7, 2, 2, 2 }, new int[] { 4, 9, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0048578968271613121, -0.60417622327804565, 0.0445394404232502, new int[] { 17, 3, 3, 4, -1 }, new int[] { 18, 3, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0015867310576140881, -0.1034090965986252, 0.23282019793987269, new int[] { 16, 9, 2, 8, -1 }, new int[] { 16, 9, 1, 4, 2 }, new int[] { 17, 13, 1, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0047427811659872532, 0.284902811050415, -0.0980904996395111, new int[] { 15, 7, 1, 6, -1 }, new int[] { 15, 9, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0013515240279957652, 0.2309643030166626, -0.113618403673172, new int[] { 14, 2, 2, 2, -1 }, new int[] { 14, 3, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0022526069078594446, 0.0644783228635788, -0.42205891013145452, new int[] { 17, 0, 2, 3, -1 }, new int[] { 17, 1, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0003803865984082222, -0.3807620108127594, 0.0600432902574539, new int[] { 16, 18, 2, 2, -1 }, new int[] { 16, 18, 1, 1, 2 }, new int[] { 17, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0049043921753764153, -0.076104998588562, 0.33232170343399048, new int[] { 10, 4, 4, 3, -1 }, new int[] { 10, 5, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0090969670563936234, 0.1428779065608978, -0.16887800395488739, new int[] { 0, 2, 8, 6, -1 }, new int[] { 4, 2, 4, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0069317929446697235, 0.27255409955978388, -0.0928795635700226, new int[] { 7, 14, 6, 6, -1 }, new int[] { 7, 16, 6, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0011471060570329428, -0.15273059904575351, 0.19702400267124179, new int[] { 11, 15, 2, 2, -1 }, new int[] { 11, 16, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0376628898084164, -0.59320437908172607, 0.0407386012375355, new int[] { 7, 1, 9, 4, -1 }, new int[] { 10, 1, 3, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0068165571428835392, 0.25494089722633362, -0.0940819606184959, new int[] { 9, 7, 3, 7, -1 }, new int[] { 10, 7, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00066205562325194478, 0.0467957183718681, -0.48454371094703669, new int[] { 6, 17, 2, 2, -1 }, new int[] { 6, 17, 1, 1, 2 }, new int[] { 7, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.004220255184918642, 0.2468214929103851, -0.0946739763021469, new int[] { 4, 6, 3, 9, -1 }, new int[] { 5, 6, 1, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0689865127205849, -0.66514801979064941, 0.0359263904392719, new int[] { 0, 10, 19, 10, -1 }, new int[] { 0, 15, 19, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.006170760840177536, 0.0258333198726177, -0.72686272859573364, new int[] { 5, 17, 6, 1, -1 }, new int[] { 7, 17, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0105362497270107, -0.0818289965391159, 0.29760798811912542, new int[] { 0, 12, 6, 3, -1 }, new int[] { 3, 12, 3, 3, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 11
            stage = new HaarCascadeStage(-1.1255199909210205, 10, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0627587288618088, 0.27899080514907842, -0.29656109213829041, new int[] { 2, 5, 18, 5, -1 }, new int[] { 8, 5, 6, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0034516479354351759, -0.34635880589485168, 0.20903840661048889, new int[] { 1, 15, 6, 4, -1 }, new int[] { 1, 17, 6, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0078699486330151558, 0.24144889414310461, -0.19205570220947271, new int[] { 14, 10, 6, 6, -1 }, new int[] { 16, 10, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0034624869003891945, -0.59151780605316162, 0.1248644962906838, new int[] { 0, 14, 4, 3, -1 }, new int[] { 0, 15, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0094818761572241783, 0.1839154064655304, -0.24858260154724121, new int[] { 1, 7, 6, 11, -1 }, new int[] { 3, 7, 2, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00023226840130519122, -0.33047258853912348, 0.10999260097742081, new int[] { 13, 17, 7, 2, -1 }, new int[] { 13, 18, 7, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0018101120367646217, 0.0987440124154091, -0.4963478147983551, new int[] { 0, 14, 2, 3, -1 }, new int[] { 0, 15, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0054422430694103241, 0.2934441864490509, -0.13094750046730039, new int[] { 0, 0, 6, 2, -1 }, new int[] { 3, 0, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0074148122221231461, -0.14762699604034421, 0.33277168869972229, new int[] { 0, 1, 6, 3, -1 }, new int[] { 3, 1, 3, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0155651401728392, -0.68404901027679443, 0.0998726934194565, new int[] { 0, 8, 2, 6, -1 }, new int[] { 0, 10, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0287205204367638, -0.148332804441452, 0.30902579426765442, new int[] { 1, 2, 6, 14, -1 }, new int[] { 1, 2, 3, 7, 2 }, new int[] { 4, 9, 3, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(9.6687392215244472E-05, -0.17431040108203891, 0.2140295952558518, new int[] { 17, 5, 2, 2, -1 }, new int[] { 17, 5, 1, 1, 2 }, new int[] { 18, 6, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0523710586130619, -0.0701568573713303, 0.49222990870475769, new int[] { 11, 10, 9, 4, -1 }, new int[] { 14, 10, 3, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0864856913685799, 0.5075724720954895, -0.0752942115068436, new int[] { 2, 9, 12, 4, -1 }, new int[] { 6, 9, 4, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0421698689460754, 0.45680961012840271, -0.0902199000120163, new int[] { 7, 10, 12, 2, -1 }, new int[] { 11, 10, 4, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(4.5369830331765115E-05, -0.2653827965259552, 0.1618953943252564, new int[] { 2, 13, 1, 2, -1 }, new int[] { 2, 14, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0052918000146746635, 0.0748901516199112, -0.540546715259552, new int[] { 16, 7, 4, 3, -1 }, new int[] { 16, 8, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00075511651812121272, -0.49261990189552313, 0.0587239488959312, new int[] { 19, 16, 1, 3, -1 }, new int[] { 19, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.5108138844370842E-05, -0.2143210023641586, 0.14077760279178619, new int[] { 18, 11, 1, 2, -1 }, new int[] { 18, 12, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0049981209449470043, -0.0905473381280899, 0.35716068744659418, new int[] { 12, 7, 8, 2, -1 }, new int[] { 12, 7, 4, 1, 2 }, new int[] { 16, 8, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0014929979806765914, 0.25623458623886108, -0.1422906965017319, new int[] { 14, 9, 2, 4, -1 }, new int[] { 15, 9, 1, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0027239411137998104, -0.15649250149726871, 0.21088710427284241, new int[] { 14, 2, 6, 4, -1 }, new int[] { 14, 2, 3, 2, 2 }, new int[] { 17, 4, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0022218320518732071, -0.1507298946380615, 0.2680186927318573, new int[] { 14, 0, 6, 1, -1 }, new int[] { 17, 0, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00073993072146549821, 0.29546990990638727, -0.1069239005446434, new int[] { 3, 12, 2, 1, -1 }, new int[] { 4, 12, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0020113459322601557, 0.0506143495440483, -0.71683371067047119, new int[] { 17, 2, 3, 1, -1 }, new int[] { 18, 2, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0114528704434633, -0.12719069421291351, 0.241527795791626, new int[] { 1, 16, 18, 2, -1 }, new int[] { 7, 16, 6, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0010782170575112104, 0.24813009798526761, -0.1346119940280914, new int[] { 2, 19, 8, 1, -1 }, new int[] { 6, 19, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00334176910109818, 0.0535783097147942, -0.52274167537689209, new int[] { 1, 17, 4, 3, -1 }, new int[] { 1, 18, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.9398651248775423E-05, -0.21698740124702451, 0.12812179327011111, new int[] { 19, 13, 1, 2, -1 }, new int[] { 19, 14, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0040982551872730255, 0.24401889741420749, -0.1157058998942375, new int[] { 9, 16, 10, 4, -1 }, new int[] { 9, 16, 5, 2, 2 }, new int[] { 14, 18, 5, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0016289720078930259, 0.28261470794677729, -0.1065946966409683, new int[] { 12, 9, 2, 4, -1 }, new int[] { 12, 9, 1, 2, 2 }, new int[] { 13, 11, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0139848599210382, 0.0427158996462822, -0.73646312952041626, new int[] { 19, 11, 1, 9, -1 }, new int[] { 19, 14, 1, 3, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 12
            stage = new HaarCascadeStage(-1.1729990243911743, 11, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.164165198802948, -0.48960301280021667, 0.17607709765434271, new int[] { 6, 6, 14, 14, -1 }, new int[] { 6, 13, 14, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00083413062384352088, -0.28220430016517639, 0.24199579656124121, new int[] { 2, 17, 4, 2, -1 }, new int[] { 2, 18, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017193210078403354, -0.714858889579773, 0.0861622169613838, new int[] { 0, 2, 1, 3, -1 }, new int[] { 0, 3, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0015654950402677059, -0.72972381114959717, 0.0940706729888916, new int[] { 0, 12, 1, 3, -1 }, new int[] { 0, 13, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0019124479731544852, -0.31187158823013311, 0.18143390119075781, new int[] { 15, 15, 4, 4, -1 }, new int[] { 15, 17, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.13512369990348819, 0.29577299952507019, -0.22179250419139859, new int[] { 2, 5, 18, 7, -1 }, new int[] { 8, 5, 6, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0040300549007952213, -0.66595137119293213, 0.0854310169816017, new int[] { 1, 16, 5, 3, -1 }, new int[] { 1, 17, 5, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0028640460222959518, -0.62086361646652222, 0.0531060211360455, new int[] { 0, 4, 2, 3, -1 }, new int[] { 0, 5, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0014065420255064964, 0.22346289455890661, -0.2021100968122482, new int[] { 0, 6, 2, 6, -1 }, new int[] { 1, 6, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0035820449702441692, -0.54030400514602661, 0.0682136192917824, new int[] { 16, 14, 4, 3, -1 }, new int[] { 16, 15, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.04154447093606, -0.0652158409357071, 0.62109231948852539, new int[] { 0, 0, 10, 6, -1 }, new int[] { 0, 0, 5, 3, 2 }, new int[] { 5, 3, 5, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0091709550470113754, -0.75553297996521, 0.0526404492557049, new int[] { 2, 2, 3, 6, -1 }, new int[] { 3, 2, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0061552738770842552, 0.0909394025802612, -0.44246131181716919, new int[] { 2, 0, 3, 10, -1 }, new int[] { 3, 0, 1, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0010043520014733076, 0.242923304438591, -0.1866979002952576, new int[] { 5, 5, 2, 2, -1 }, new int[] { 5, 6, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0115198297426105, -0.1176315024495125, 0.36723458766937261, new int[] { 12, 6, 4, 4, -1 }, new int[] { 12, 8, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0089040733873844147, -0.48931330442428589, 0.1089702025055885, new int[] { 13, 5, 7, 3, -1 }, new int[] { 13, 6, 7, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00053973670583218336, -0.2185039967298508, 0.1848998963832855, new int[] { 10, 13, 1, 2, -1 }, new int[] { 10, 14, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0013727260520681739, -0.15072910487651831, 0.29173129796981812, new int[] { 16, 16, 4, 2, -1 }, new int[] { 18, 16, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0108073903247714, 0.42897450923919678, -0.1028013974428177, new int[] { 16, 12, 4, 7, -1 }, new int[] { 18, 12, 2, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0012670770520344377, 0.0741921588778496, -0.64208251237869263, new int[] { 16, 17, 1, 3, -1 }, new int[] { 16, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0022991129662841558, 0.0471002794802189, -0.723352313041687, new int[] { 19, 9, 1, 3, -1 }, new int[] { 19, 10, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.002718751085922122, -0.17086869478225711, 0.235135093331337, new int[] { 18, 7, 2, 6, -1 }, new int[] { 19, 7, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0066619180142879486, -0.78975427150726318, 0.0450846701860428, new int[] { 8, 1, 3, 4, -1 }, new int[] { 9, 1, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0482666492462158, -0.69579917192459106, 0.0419760793447495, new int[] { 14, 0, 6, 9, -1 }, new int[] { 16, 0, 2, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0152146900072694, -0.1081828027963638, 0.36460620164871221, new int[] { 4, 2, 10, 2, -1 }, new int[] { 9, 2, 5, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0060080131515860558, 0.309709906578064, -0.1135921031236649, new int[] { 2, 12, 8, 4, -1 }, new int[] { 2, 12, 4, 2, 2 }, new int[] { 6, 14, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0066127157770097256, 0.0806653425097466, -0.46658530831336981, new int[] { 0, 4, 7, 3, -1 }, new int[] { 0, 5, 7, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0079607013612985611, -0.87201941013336182, 0.0367745906114578, new int[] { 14, 14, 3, 3, -1 }, new int[] { 15, 14, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.003884719917550683, -0.11666289716959, 0.33070269227027888, new int[] { 0, 3, 4, 3, -1 }, new int[] { 2, 3, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.001098881009966135, 0.23872570693492889, -0.17656759917736051, new int[] { 1, 0, 2, 7, -1 }, new int[] { 2, 0, 1, 7, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 13
            stage = new HaarCascadeStage(-1.036829948425293, 12, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.0035903379321098328, -0.23688079416751859, 0.2463164031505585, new int[] { 15, 16, 4, 4, -1 }, new int[] { 15, 18, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0064815930090844631, -0.3137362003326416, 0.18675759434700009, new int[] { 5, 8, 12, 4, -1 }, new int[] { 5, 10, 12, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.3048402555286884E-05, -0.27644351124763489, 0.16496239602565771, new int[] { 3, 17, 1, 2, -1 }, new int[] { 3, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00385146401822567, -0.56014508008956909, 0.1129473969340324, new int[] { 6, 1, 3, 4, -1 }, new int[] { 7, 1, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0038588210009038448, 0.0398489981889725, -0.58071857690811157, new int[] { 6, 2, 3, 4, -1 }, new int[] { 7, 2, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0246512200683355, 0.16755010187625891, -0.25343671441078192, new int[] { 6, 8, 9, 12, -1 }, new int[] { 9, 8, 3, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0472455210983753, -0.1066208034753799, 0.39451980590820312, new int[] { 8, 1, 8, 6, -1 }, new int[] { 8, 3, 8, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00659646512940526, -0.17744250595569611, 0.27280190587043762, new int[] { 14, 2, 6, 3, -1 }, new int[] { 17, 2, 3, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0013177490327507258, -0.54272651672363281, 0.0486065894365311, new int[] { 0, 6, 1, 3, -1 }, new int[] { 0, 7, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0050261709839105606, 0.2439424991607666, -0.13143649697303769, new int[] { 10, 0, 10, 2, -1 }, new int[] { 15, 0, 5, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0034632768947631121, 0.0690493434667587, -0.70336240530014038, new int[] { 11, 0, 3, 2, -1 }, new int[] { 12, 0, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0021692588925361633, -0.1328946053981781, 0.2209852933883667, new int[] { 3, 19, 10, 1, -1 }, new int[] { 8, 19, 5, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0293958708643913, -0.2853052020072937, 0.13543990254402161, new int[] { 0, 4, 7, 16, -1 }, new int[] { 0, 12, 7, 8, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00096181448316201568, -0.580413818359375, 0.0374506488442421, new int[] { 2, 16, 1, 3, -1 }, new int[] { 2, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.1082099974155426, 0.39467281103134161, -0.078655943274498, new int[] { 7, 8, 12, 6, -1 }, new int[] { 11, 8, 4, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0180248692631722, 0.27355629205703741, -0.13415299355983731, new int[] { 14, 9, 6, 7, -1 }, new int[] { 16, 9, 2, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0062509840354323387, 0.023388059809804, -0.80088591575622559, new int[] { 12, 17, 6, 1, -1 }, new int[] { 14, 17, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0016088379779830575, -0.56762522459030151, 0.0412156693637371, new int[] { 16, 1, 3, 1, -1 }, new int[] { 17, 1, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00077564752427861094, -0.1489126980304718, 0.19086180627346039, new int[] { 0, 17, 8, 2, -1 }, new int[] { 0, 17, 4, 1, 2 }, new int[] { 4, 18, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(8.7122338300105184E-05, -0.155575305223465, 0.194282203912735, new int[] { 17, 0, 2, 1, -1 }, new int[] { 18, 0, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0207553207874298, -0.63006532192230225, 0.0361343808472157, new int[] { 4, 15, 6, 5, -1 }, new int[] { 6, 15, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0062931738793849945, 0.25609248876571661, -0.10588269680738451, new int[] { 7, 2, 8, 2, -1 }, new int[] { 7, 3, 8, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0108441496267915, -0.1012485027313232, 0.30322128534317022, new int[] { 4, 1, 8, 4, -1 }, new int[] { 4, 3, 8, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-6.3752777350600809E-05, 0.19111579656600949, -0.13849230110645289, new int[] { 5, 19, 2, 1, -1 }, new int[] { 6, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.6480963141657412E-05, -0.1520525068044663, 0.21706309914588931, new int[] { 5, 19, 2, 1, -1 }, new int[] { 6, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0013560829684138298, 0.0494317896664143, -0.64279842376708984, new int[] { 16, 17, 1, 3, -1 }, new int[] { 16, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00090662558795884252, 0.17982010543346411, -0.14044609665870669, new int[] { 0, 11, 2, 3, -1 }, new int[] { 1, 11, 1, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0010473709553480148, -0.1093354970216751, 0.242659404873848, new int[] { 0, 19, 4, 1, -1 }, new int[] { 2, 19, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0010243969736620784, 0.2716268002986908, -0.11820919811725621, new int[] { 0, 18, 4, 2, -1 }, new int[] { 2, 18, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0012024149764329195, -0.701511025428772, 0.0394898988306522, new int[] { 2, 17, 1, 3, -1 }, new int[] { 2, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0076911649666726589, -0.0922189131379128, 0.31046289205551147, new int[] { 5, 7, 11, 2, -1 }, new int[] { 5, 8, 11, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.139665499329567, 0.68979388475418091, -0.0397061184048653, new int[] { 9, 2, 4, 10, -1 }, new int[] { 9, 7, 4, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0021276050247251987, 0.0972776114940643, -0.2884179949760437, new int[] { 0, 2, 4, 3, -1 }, new int[] { 0, 3, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0027594310231506824, 0.2416867017745972, -0.1127782016992569, new int[] { 10, 19, 10, 1, -1 }, new int[] { 15, 19, 5, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0052236132323741913, -0.1143027991056442, 0.24256780743598941, new int[] { 11, 17, 8, 3, -1 }, new int[] { 15, 17, 4, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0012590440455824137, -0.59679388999938965, 0.0476639606058598, new int[] { 8, 19, 3, 1, -1 }, new int[] { 9, 19, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0037192099262028933, -0.464141309261322, 0.0528476908802986, new int[] { 14, 0, 3, 4, -1 }, new int[] { 15, 0, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0059696151874959469, -0.0732442885637283, 0.38743090629577642, new int[] { 10, 6, 4, 3, -1 }, new int[] { 10, 7, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0051776720210909843, -0.74193227291107178, 0.0404967106878757, new int[] { 0, 8, 3, 2, -1 }, new int[] { 0, 9, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0050035100430250168, -0.13888800144195559, 0.1876762062311173, new int[] { 7, 12, 3, 6, -1 }, new int[] { 7, 14, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00052013457752764225, -0.54940617084503174, 0.0494178496301174, new int[] { 1, 18, 1, 2, -1 }, new int[] { 1, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00531687680631876, -0.0824829787015915, 0.31740561127662659, new int[] { 0, 12, 4, 4, -1 }, new int[] { 2, 12, 2, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0147745897993445, 0.20816099643707281, -0.12115559726953511, new int[] { 1, 8, 6, 7, -1 }, new int[] { 3, 8, 2, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0414164513349533, -0.82437807321548462, 0.0333291888237, new int[] { 0, 8, 4, 5, -1 }, new int[] { 2, 8, 2, 5, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 14
            stage = new HaarCascadeStage(-1.0492420196533203, 13, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.00090962520334869623, 0.0845799669623375, -0.5611841082572937, new int[] { 19, 16, 1, 3, -1 }, new int[] { 19, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0561397895216942, 0.1534174978733063, -0.26967319846153259, new int[] { 1, 5, 18, 6, -1 }, new int[] { 7, 5, 6, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0010292009683325887, -0.2048998028039932, 0.2015317976474762, new int[] { 2, 15, 4, 2, -1 }, new int[] { 2, 16, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00287830107845366, -0.1735114008188248, 0.21297949552536011, new int[] { 18, 6, 2, 11, -1 }, new int[] { 19, 6, 1, 11, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0074144392274320126, -0.59624868631362915, 0.0470779500901699, new int[] { 0, 12, 2, 6, -1 }, new int[] { 0, 14, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0014831849839538336, 0.1902461051940918, -0.1598639041185379, new int[] { 12, 5, 3, 2, -1 }, new int[] { 12, 6, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0045968941412866116, 0.0314471311867237, -0.6869434118270874, new int[] { 1, 3, 2, 3, -1 }, new int[] { 1, 4, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0024255330208688974, -0.23609359562397, 0.1103610992431641, new int[] { 16, 14, 4, 4, -1 }, new int[] { 16, 16, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0849505662918091, 0.2310716062784195, -0.1377653032541275, new int[] { 6, 8, 12, 5, -1 }, new int[] { 10, 8, 4, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0050145681016147137, 0.38676109910011292, -0.0562173798680305, new int[] { 13, 7, 2, 7, -1 }, new int[] { 14, 7, 1, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0021482061129063368, 0.18191599845886231, -0.17615699768066409, new int[] { 1, 8, 2, 6, -1 }, new int[] { 2, 8, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0103967702016234, -0.75351381301879883, 0.0240919701755047, new int[] { 15, 0, 3, 7, -1 }, new int[] { 16, 0, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0134667502716184, -0.72118860483169556, 0.0349493697285652, new int[] { 4, 2, 6, 2, -1 }, new int[] { 6, 2, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0844354778528214, -0.33792638778686518, 0.0711138173937798, new int[] { 0, 9, 20, 9, -1 }, new int[] { 0, 12, 20, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00247714901342988, -0.11765109747648241, 0.225419893860817, new int[] { 10, 14, 2, 2, -1 }, new int[] { 10, 15, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.015828050673008, -0.0695362165570259, 0.313953697681427, new int[] { 6, 5, 10, 4, -1 }, new int[] { 6, 7, 10, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0649169832468033, -0.0750435888767242, 0.40677338838577271, new int[] { 6, 1, 5, 9, -1 }, new int[] { 6, 4, 5, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00029652469675056636, 0.0739533603191376, -0.3454400897026062, new int[] { 16, 18, 2, 2, -1 }, new int[] { 16, 18, 1, 1, 2 }, new int[] { 17, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0013129520229995251, -0.1690943986177445, 0.1525837033987045, new int[] { 0, 14, 2, 4, -1 }, new int[] { 0, 16, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0058032129891216755, 0.35260149836540222, -0.0834440663456917, new int[] { 10, 8, 2, 5, -1 }, new int[] { 11, 8, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.14791679382324219, 0.43004658818244929, -0.0573099292814732, new int[] { 3, 7, 12, 7, -1 }, new int[] { 7, 7, 4, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.016584150493145, 0.23432689905166629, -0.1090764030814171, new int[] { 0, 0, 6, 6, -1 }, new int[] { 3, 0, 3, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0030183270573616028, -0.1360093951225281, 0.264092892408371, new int[] { 1, 0, 4, 4, -1 }, new int[] { 3, 0, 2, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0364719182252884, -0.628097414970398, 0.0435451082885265, new int[] { 0, 0, 6, 8, -1 }, new int[] { 2, 0, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-7.3119226726703346E-05, 0.16470630466938019, -0.1646378040313721, new int[] { 0, 0, 2, 1, -1 }, new int[] { 1, 0, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0036719450727105141, -0.47421360015869141, 0.0485869199037552, new int[] { 0, 0, 3, 3, -1 }, new int[] { 0, 1, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.004015117883682251, 0.1822218000888825, -0.14097510278224951, new int[] { 5, 4, 2, 4, -1 }, new int[] { 5, 6, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0199480205774307, -0.0697876587510109, 0.36707460880279541, new int[] { 2, 10, 9, 1, -1 }, new int[] { 5, 10, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00076699437340721488, 0.0557292997837067, -0.4458543062210083, new int[] { 1, 17, 1, 3, -1 }, new int[] { 1, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0011806039838120341, -0.46876621246337891, 0.0489022210240364, new int[] { 0, 17, 2, 3, -1 }, new int[] { 0, 18, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0158473495393991, -0.12120209634304049, 0.2056653052568436, new int[] { 0, 15, 16, 3, -1 }, new int[] { 8, 15, 8, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0011985700111836195, 0.20262099802494049, -0.12823820114135739, new int[] { 0, 5, 4, 1, -1 }, new int[] { 2, 5, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.1096495985984802, -0.86619192361831665, 0.0303518492728472, new int[] { 1, 0, 6, 20, -1 }, new int[] { 3, 0, 2, 20, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0092532606795430183, 0.29343119263648992, -0.0853619500994682, new int[] { 2, 5, 4, 6, -1 }, new int[] { 2, 5, 2, 3, 2 }, new int[] { 4, 8, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0146865304559469, 0.0327986218035221, -0.77556562423706055, new int[] { 9, 16, 6, 3, -1 }, new int[] { 11, 16, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0013514430029317737, 0.244269996881485, -0.1150325015187264, new int[] { 11, 17, 6, 1, -1 }, new int[] { 14, 17, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0043728090822696686, 0.21687670052051539, -0.1398448050022125, new int[] { 3, 17, 15, 2, -1 }, new int[] { 8, 17, 5, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0034263390116393566, 0.0456142202019691, -0.545677125453949, new int[] { 18, 0, 2, 3, -1 }, new int[] { 18, 1, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0038404068909585476, 0.149495005607605, -0.15062509477138519, new int[] { 13, 1, 7, 4, -1 }, new int[] { 13, 3, 7, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0037988980766385794, -0.0873016268014908, 0.25481531023979193, new int[] { 13, 6, 4, 4, -1 }, new int[] { 13, 6, 2, 2, 2 }, new int[] { 15, 8, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0020094281062483788, 0.1725907027721405, -0.14288470149040219, new int[] { 17, 6, 3, 4, -1 }, new int[] { 17, 8, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0024370709434151649, 0.26848098635673517, -0.0818982198834419, new int[] { 14, 9, 2, 2, -1 }, new int[] { 15, 9, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0010485399980098009, 0.0461132600903511, -0.47243279218673712, new int[] { 17, 17, 1, 3, -1 }, new int[] { 17, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00174607802182436, -0.1103043034672737, 0.2037972956895828, new int[] { 3, 19, 8, 1, -1 }, new int[] { 7, 19, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0058608627878129482, -0.15619659423828131, 0.1592743992805481, new int[] { 0, 9, 3, 6, -1 }, new int[] { 0, 12, 3, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0277249794453382, 0.1134911999106407, -0.21885140240192411, new int[] { 4, 7, 15, 5, -1 }, new int[] { 9, 7, 5, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0470806397497654, -0.0416887290775776, 0.53630048036575317, new int[] { 6, 9, 9, 5, -1 }, new int[] { 9, 9, 3, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0079283770173788071, -0.53595131635665894, 0.0442375093698502, new int[] { 8, 1, 6, 2, -1 }, new int[] { 10, 1, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0128805404528975, 0.2323794960975647, -0.102462500333786, new int[] { 4, 0, 12, 2, -1 }, new int[] { 10, 0, 6, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0236047692596912, -0.0882914364337921, 0.30561059713363647, new int[] { 7, 0, 10, 3, -1 }, new int[] { 12, 0, 5, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0159022007137537, -0.1223810985684395, 0.1784912049770355, new int[] { 5, 0, 9, 6, -1 }, new int[] { 5, 2, 9, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0079939495772123337, -0.0837290063500404, 0.32319590449333191, new int[] { 8, 3, 6, 4, -1 }, new int[] { 8, 5, 6, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0057100867852568626, 0.038479208946228, -0.68138152360916138, new int[] { 17, 4, 2, 3, -1 }, new int[] { 17, 5, 2, 1, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 15
            stage = new HaarCascadeStage(-1.1122100353240967, 14, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.0022480720654129982, -0.16416870057582861, 0.41648530960083008, new int[] { 5, 2, 4, 3, -1 }, new int[] { 5, 3, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0045813550241291523, -0.1246595978736877, 0.4038512110710144, new int[] { 5, 9, 2, 6, -1 }, new int[] { 6, 9, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0016073239967226982, 0.260824590921402, -0.202825203537941, new int[] { 14, 10, 2, 6, -1 }, new int[] { 15, 10, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0025205370038747787, -0.1055722981691361, 0.3666911125183106, new int[] { 7, 4, 3, 3, -1 }, new int[] { 7, 5, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0024119189474731684, -0.13877600431442261, 0.29959911108016968, new int[] { 12, 4, 8, 2, -1 }, new int[] { 12, 4, 4, 1, 2 }, new int[] { 16, 5, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.005715617910027504, -0.0776834636926651, 0.4848192036151886, new int[] { 15, 8, 1, 6, -1 }, new int[] { 15, 10, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0031093840952962637, -0.11229000240564351, 0.29215508699417109, new int[] { 4, 17, 11, 3, -1 }, new int[] { 4, 18, 11, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0868366286158562, -0.367796003818512, 0.0725972428917885, new int[] { 3, 0, 16, 20, -1 }, new int[] { 3, 10, 16, 10, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0052652182057499886, -0.10890290141105651, 0.31791260838508612, new int[] { 12, 4, 4, 6, -1 }, new int[] { 12, 6, 4, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0199135299772024, -0.53373438119888306, 0.0705857127904892, new int[] { 11, 0, 6, 6, -1 }, new int[] { 13, 0, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00382978399284184, -0.135759100317955, 0.2278887927532196, new int[] { 13, 1, 6, 4, -1 }, new int[] { 13, 1, 3, 2, 2 }, new int[] { 16, 3, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0104318596422672, 0.0887979120016098, -0.47958970069885248, new int[] { 11, 0, 6, 4, -1 }, new int[] { 13, 0, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0200404394418001, 0.15745539963245389, -0.17771570384502411, new int[] { 8, 6, 6, 9, -1 }, new int[] { 10, 6, 2, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.005296729039400816, -0.6843491792678833, 0.0356714613735676, new int[] { 7, 0, 3, 4, -1 }, new int[] { 8, 0, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0021624139044433832, 0.28318038582801819, -0.098511278629303, new int[] { 0, 17, 14, 2, -1 }, new int[] { 0, 17, 7, 1, 2 }, new int[] { 7, 18, 7, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00035464888787828386, -0.37077340483665472, 0.0809329524636269, new int[] { 6, 18, 2, 2, -1 }, new int[] { 6, 18, 1, 1, 2 }, new int[] { 7, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00018152060511056334, -0.322070300579071, 0.0775510594248772, new int[] { 18, 17, 1, 3, -1 }, new int[] { 18, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.000275630212854594, -0.32441279292106628, 0.0879494771361351, new int[] { 17, 18, 2, 2, -1 }, new int[] { 17, 18, 1, 1, 2 }, new int[] { 18, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0063823810778558254, -0.0889247134327888, 0.31727218627929688, new int[] { 5, 7, 1, 9, -1 }, new int[] { 5, 10, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0111509095877409, 0.0710198432207108, -0.4049403965473175, new int[] { 5, 3, 6, 4, -1 }, new int[] { 7, 3, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0010593760525807738, 0.26050668954849238, -0.1176564022898674, new int[] { 1, 9, 6, 2, -1 }, new int[] { 1, 9, 3, 1, 2 }, new int[] { 4, 10, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0023906480055302382, -0.0843886211514473, 0.3123055100440979, new int[] { 6, 9, 2, 3, -1 }, new int[] { 7, 9, 1, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0110007496550679, 0.19152249395847321, -0.15210020542144781, new int[] { 6, 8, 6, 12, -1 }, new int[] { 8, 8, 2, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00024643228971399367, -0.31765159964561462, 0.0865822583436966, new int[] { 4, 18, 2, 2, -1 }, new int[] { 4, 18, 1, 1, 2 }, new int[] { 5, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0230532698333263, -0.10089760273694991, 0.25769290328025818, new int[] { 9, 1, 6, 6, -1 }, new int[] { 9, 3, 6, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0022135660983622074, 0.45689210295677191, -0.0524047911167145, new int[] { 6, 17, 6, 2, -1 }, new int[] { 6, 18, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.000971397093962878, -0.3551838099956513, 0.0800943821668625, new int[] { 3, 18, 16, 2, -1 }, new int[] { 3, 19, 16, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0015676229959353805, 0.1009142026305199, -0.21603040397167211, new int[] { 3, 0, 3, 11, -1 }, new int[] { 4, 0, 1, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00075460801599547267, 0.0578961782157421, -0.40461111068725591, new int[] { 13, 18, 3, 1, -1 }, new int[] { 14, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0206989701837301, 0.31543630361557012, -0.0807130485773087, new int[] { 6, 0, 9, 6, -1 }, new int[] { 6, 2, 9, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0206199400126934, 0.271816611289978, -0.0763586163520813, new int[] { 1, 2, 12, 4, -1 }, new int[] { 1, 2, 6, 2, 2 }, new int[] { 7, 4, 6, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0216111298650503, 0.0394934490323067, -0.59429651498794556, new int[] { 3, 3, 6, 4, -1 }, new int[] { 5, 3, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0065676742233335972, -0.0983536690473557, 0.23649279773235321, new int[] { 12, 0, 8, 1, -1 }, new int[] { 16, 0, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0088434796780347824, -0.52523428201675415, 0.0430999211966991, new int[] { 9, 0, 6, 2, -1 }, new int[] { 11, 0, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0094260741025209427, 0.2466513067483902, -0.0941307172179222, new int[] { 3, 3, 12, 1, -1 }, new int[] { 9, 3, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0019830230157822371, 0.26743701100349432, -0.0900693163275719, new int[] { 2, 7, 6, 2, -1 }, new int[] { 2, 7, 3, 1, 2 }, new int[] { 5, 8, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017358399927616119, 0.15940019488334661, -0.157894104719162, new int[] { 0, 8, 4, 6, -1 }, new int[] { 0, 10, 4, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0135138696059585, 0.40792331099510187, -0.0642231181263924, new int[] { 9, 6, 3, 7, -1 }, new int[] { 10, 6, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0193940103054047, 0.18015649914741519, -0.13731400668621061, new int[] { 9, 6, 6, 13, -1 }, new int[] { 11, 6, 2, 13, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0032684770412743092, 0.29080390930175781, -0.0801619067788124, new int[] { 11, 12, 6, 1, -1 }, new int[] { 13, 12, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00041773589327931404, -0.2141298055648804, 0.1127343997359276, new int[] { 18, 9, 2, 6, -1 }, new int[] { 18, 12, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0076351119205355644, -0.45365959405899048, 0.0546250604093075, new int[] { 17, 2, 3, 9, -1 }, new int[] { 18, 2, 1, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0083652976900339127, 0.26472920179367071, -0.0943341106176376, new int[] { 13, 8, 4, 6, -1 }, new int[] { 13, 8, 2, 3, 2 }, new int[] { 15, 11, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.027768449857831, -0.1013671010732651, 0.20743979513645169, new int[] { 4, 2, 12, 6, -1 }, new int[] { 10, 2, 6, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0548912286758423, 0.28840309381484991, -0.075312040746212, new int[] { 4, 14, 16, 6, -1 }, new int[] { 12, 14, 8, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0025793339591473341, -0.11088529974222181, 0.21724960207939151, new int[] { 6, 19, 10, 1, -1 }, new int[] { 11, 19, 5, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.6196516854688525E-05, -0.18872100114822391, 0.14440689980983731, new int[] { 6, 17, 1, 3, -1 }, new int[] { 6, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0050907251425087452, -0.0776012316346169, 0.29398378729820251, new int[] { 4, 14, 10, 3, -1 }, new int[] { 4, 15, 10, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.1044425964355469, 0.20133109390735629, -0.1090397015213966, new int[] { 6, 0, 12, 12, -1 }, new int[] { 6, 4, 12, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0006727309082634747, 0.17945900559425351, -0.1202367022633553, new int[] { 5, 7, 4, 2, -1 }, new int[] { 5, 7, 2, 1, 2 }, new int[] { 7, 8, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0032412849832326174, 0.0406881310045719, -0.5460057258605957, new int[] { 17, 5, 3, 2, -1 }, new int[] { 18, 5, 1, 2, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 16
            stage = new HaarCascadeStage(-1.2529590129852295, 15, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.0052965320646762848, -0.12154529988765719, 0.64420372247695923, new int[] { 8, 13, 6, 3, -1 }, new int[] { 8, 14, 6, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.002532626036554575, 0.51233220100402832, -0.111082598567009, new int[] { 8, 13, 5, 3, -1 }, new int[] { 8, 14, 5, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029183230362832546, -0.50615429878234863, 0.11501979827880859, new int[] { 13, 2, 1, 18, -1 }, new int[] { 13, 11, 1, 9, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0236923396587372, 0.37167280912399292, -0.14672680199146271, new int[] { 6, 10, 9, 2, -1 }, new int[] { 9, 10, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0201774705201387, -0.17388840019702911, 0.47759491205215449, new int[] { 11, 0, 7, 4, -1 }, new int[] { 11, 2, 7, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.021723210811615, -0.43880090117454529, 0.1357689946889877, new int[] { 1, 0, 6, 8, -1 }, new int[] { 3, 0, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0028369780629873276, -0.12512069940567019, 0.46789029240608221, new int[] { 9, 15, 3, 3, -1 }, new int[] { 9, 16, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0027148420922458172, -0.0880188569426537, 0.3686651885509491, new int[] { 9, 17, 9, 3, -1 }, new int[] { 9, 18, 9, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0032625689636915922, -0.0853353068232536, 0.51644730567932129, new int[] { 12, 12, 3, 3, -1 }, new int[] { 12, 13, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0035618850961327553, -0.445039302110672, 0.0917381718754768, new int[] { 4, 1, 3, 5, -1 }, new int[] { 5, 1, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.001922774943523109, -0.1107731014490128, 0.39416998624801641, new int[] { 10, 14, 2, 3, -1 }, new int[] { 10, 15, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00035111969918943942, -0.37775701284408569, 0.12166170030832291, new int[] { 18, 17, 2, 2, -1 }, new int[] { 18, 17, 1, 1, 2 }, new int[] { 19, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00019121779769193381, 0.0748160183429718, -0.4076710045337677, new int[] { 18, 18, 2, 2, -1 }, new int[] { 18, 18, 1, 1, 2 }, new int[] { 19, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00026525629800744355, -0.33151718974113459, 0.1129112020134926, new int[] { 18, 18, 2, 2, -1 }, new int[] { 18, 18, 1, 1, 2 }, new int[] { 19, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0200867000967264, -0.0615981183946133, 0.56128817796707153, new int[] { 4, 10, 9, 1, -1 }, new int[] { 7, 10, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0367832481861115, -0.0602513886988163, 0.52192491292953491, new int[] { 3, 9, 6, 5, -1 }, new int[] { 5, 9, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0013941619545221329, -0.35503050684928888, 0.1086302027106285, new int[] { 18, 8, 1, 12, -1 }, new int[] { 18, 14, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0151816699653864, 0.22739650309085849, -0.1625299006700516, new int[] { 0, 2, 8, 6, -1 }, new int[] { 0, 2, 4, 3, 2 }, new int[] { 4, 5, 4, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0046796840615570545, -0.0575350411236286, 0.48124238848686218, new int[] { 9, 4, 3, 3, -1 }, new int[] { 9, 5, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00017988319450523704, -0.30587670207023621, 0.1086815968155861, new int[] { 3, 18, 2, 2, -1 }, new int[] { 3, 18, 1, 1, 2 }, new int[] { 4, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0035850999411195517, 0.38596940040588379, -0.0921940729022026, new int[] { 6, 4, 4, 3, -1 }, new int[] { 6, 5, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0010793360415846109, -0.1119038984179497, 0.31125208735466, new int[] { 16, 7, 4, 2, -1 }, new int[] { 16, 7, 2, 1, 2 }, new int[] { 18, 8, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.3285802500322461E-05, -0.20239910483360291, 0.155866801738739, new int[] { 5, 17, 1, 3, -1 }, new int[] { 5, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.13678739964962011, -0.21672859787940979, 0.14420390129089361, new int[] { 2, 0, 15, 20, -1 }, new int[] { 2, 10, 15, 10, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0117292599752545, 0.43503770232200623, -0.0748865306377411, new int[] { 8, 11, 6, 4, -1 }, new int[] { 8, 11, 3, 2, 2 }, new int[] { 11, 13, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0039230841211974621, -0.0502893291413784, 0.58831161260604858, new int[] { 8, 16, 4, 3, -1 }, new int[] { 8, 17, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00029819121118634939, -0.38232401013374329, 0.0924511328339577, new int[] { 8, 18, 2, 2, -1 }, new int[] { 8, 18, 1, 1, 2 }, new int[] { 9, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0047992770560085773, 0.48488789796829218, -0.0731365233659744, new int[] { 2, 16, 13, 3, -1 }, new int[] { 2, 17, 13, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00030155890271998942, -0.35757359862327581, 0.1058188006281853, new int[] { 16, 16, 2, 2, -1 }, new int[] { 16, 16, 1, 1, 2 }, new int[] { 17, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0103907696902752, 0.0529204681515694, -0.57249659299850464, new int[] { 8, 1, 6, 3, -1 }, new int[] { 10, 1, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00094488041941076517, 0.449668288230896, -0.0830755233764648, new int[] { 16, 7, 2, 2, -1 }, new int[] { 16, 7, 1, 1, 2 }, new int[] { 17, 8, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0012651870492845774, -0.0966954380273819, 0.31302270293235779, new int[] { 14, 7, 4, 2, -1 }, new int[] { 14, 7, 2, 1, 2 }, new int[] { 16, 8, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0170945394784212, -0.081248976290226, 0.36113831400871282, new int[] { 4, 0, 14, 1, -1 }, new int[] { 11, 0, 7, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.002597335958853364, -0.1133835017681122, 0.22233949601650241, new int[] { 10, 4, 8, 2, -1 }, new int[] { 10, 4, 4, 1, 2 }, new int[] { 14, 5, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0014527440071105957, 0.0697504431009293, -0.3672071099281311, new int[] { 8, 2, 3, 2, -1 }, new int[] { 9, 2, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00476386584341526, -0.0657889619469643, 0.383285403251648, new int[] { 12, 11, 6, 3, -1 }, new int[] { 12, 12, 6, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0062501081265509129, -0.70754468441009521, 0.038350198417902, new int[] { 1, 5, 1, 4, -1 }, new int[] { 1, 7, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.003176532918587327, 0.13755400478839869, -0.23240029811859131, new int[] { 1, 1, 1, 18, -1 }, new int[] { 1, 7, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0032191169448196888, -0.1293545067310333, 0.2273788005113602, new int[] { 11, 13, 3, 2, -1 }, new int[] { 11, 14, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.005636557936668396, 0.380671501159668, -0.0672468394041061, new int[] { 0, 1, 12, 2, -1 }, new int[] { 0, 1, 6, 1, 2 }, new int[] { 6, 2, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00023844049428589642, -0.31122380495071411, 0.0838383585214615, new int[] { 10, 18, 2, 2, -1 }, new int[] { 10, 18, 1, 1, 2 }, new int[] { 11, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0041017560288310051, 0.2606728076934815, -0.1044974029064179, new int[] { 4, 5, 4, 4, -1 }, new int[] { 4, 5, 2, 2, 2 }, new int[] { 6, 7, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0013336989795789123, -0.0582501403987408, 0.47682440280914312, new int[] { 6, 7, 1, 3, -1 }, new int[] { 6, 8, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0012090239906683564, 0.148345097899437, -0.17329469323158261, new int[] { 14, 10, 6, 2, -1 }, new int[] { 16, 10, 2, 2, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 17
            stage = new HaarCascadeStage(-1.1188739538192749, 16, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0031760931015014648, 0.33333331346511841, -0.166423499584198, new int[] { 16, 8, 3, 6, -1 }, new int[] { 17, 8, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0248580798506737, -0.0727288722991943, 0.5667458176612854, new int[] { 4, 10, 6, 2, -1 }, new int[] { 6, 10, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0077597280032932758, 0.4625856876373291, -0.0931121781468391, new int[] { 6, 5, 3, 7, -1 }, new int[] { 7, 5, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0078239021822810173, -0.27414610981941218, 0.13243049383163449, new int[] { 0, 13, 6, 6, -1 }, new int[] { 0, 16, 6, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.010948839597404, 0.2234548032283783, -0.1496544927358627, new int[] { 12, 5, 1, 9, -1 }, new int[] { 12, 8, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0034349008928984404, 0.38724988698959351, -0.0661217272281647, new int[] { 5, 9, 3, 3, -1 }, new int[] { 6, 9, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0311562903225422, 0.2407827973365784, -0.1140690967440605, new int[] { 7, 5, 6, 13, -1 }, new int[] { 9, 5, 2, 13, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.001110051991418004, -0.2820797860622406, 0.1327542960643768, new int[] { 19, 8, 1, 10, -1 }, new int[] { 19, 13, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0031762740109115839, 0.0345859304070473, -0.51374310255050659, new int[] { 11, 18, 6, 1, -1 }, new int[] { 13, 18, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0279774591326714, 0.23926779627799991, -0.13255919516086581, new int[] { 9, 7, 6, 12, -1 }, new int[] { 11, 7, 2, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0230979397892952, 0.39019620418548578, -0.0784780085086823, new int[] { 12, 7, 6, 6, -1 }, new int[] { 14, 7, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0039731930010020733, 0.30691069364547729, -0.0706014037132263, new int[] { 15, 8, 3, 4, -1 }, new int[] { 16, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0030335749033838511, -0.1400219053030014, 0.191348597407341, new int[] { 6, 11, 4, 2, -1 }, new int[] { 6, 12, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0108443703502417, 0.1654873043298721, -0.15657779574394229, new int[] { 1, 6, 6, 8, -1 }, new int[] { 3, 6, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0181505102664232, -0.63243591785430908, 0.0395618192851543, new int[] { 11, 15, 6, 5, -1 }, new int[] { 13, 15, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00071052298881113529, -0.18515570461750031, 0.13408809900283811, new int[] { 15, 17, 4, 2, -1 }, new int[] { 15, 18, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0108933402225375, -0.0267302300781012, 0.60971802473068237, new int[] { 13, 11, 6, 1, -1 }, new int[] { 15, 11, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00028780900174751878, -0.30065140128135681, 0.0731714591383934, new int[] { 5, 18, 2, 2, -1 }, new int[] { 5, 18, 1, 1, 2 }, new int[] { 6, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0035855069290846586, 0.26217609643936157, -0.0797140970826149, new int[] { 4, 8, 4, 4, -1 }, new int[] { 4, 8, 2, 2, 2 }, new int[] { 6, 10, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0197592806071043, -0.59039229154586792, 0.0406989715993404, new int[] { 11, 7, 9, 3, -1 }, new int[] { 11, 8, 9, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.010845210403204, 0.1636455953121185, -0.12586060166358951, new int[] { 0, 3, 10, 4, -1 }, new int[] { 0, 3, 5, 2, 2 }, new int[] { 5, 5, 5, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0043183090165257454, -0.57474881410598755, 0.0376443117856979, new int[] { 7, 18, 6, 1, -1 }, new int[] { 9, 18, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0014913700288161635, 0.0609134696424007, -0.30222928524017328, new int[] { 0, 8, 3, 3, -1 }, new int[] { 0, 9, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0156756993383169, -0.0731459110975266, 0.29379451274871832, new int[] { 0, 0, 6, 8, -1 }, new int[] { 0, 0, 3, 4, 2 }, new int[] { 3, 4, 3, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0110335601493716, 0.393188089132309, -0.0470843203365803, new int[] { 7, 6, 3, 8, -1 }, new int[] { 8, 6, 1, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0088555756956338882, 0.0376013815402985, -0.49108490347862238, new int[] { 13, 7, 7, 3, -1 }, new int[] { 13, 8, 7, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00089665671112015843, 0.1795202046632767, -0.1108623966574669, new int[] { 3, 3, 2, 2, -1 }, new int[] { 3, 4, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0030592409893870354, -0.44429460167884832, 0.0510054305195808, new int[] { 0, 3, 3, 3, -1 }, new int[] { 0, 4, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0063201179727911949, -0.0528410896658897, 0.3719710111618042, new int[] { 9, 3, 5, 2, -1 }, new int[] { 9, 4, 5, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.020682830363512, 0.0576671697199345, -0.36901599168777471, new int[] { 6, 5, 9, 4, -1 }, new int[] { 9, 5, 3, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0998226627707481, -0.037377018481493, 0.58165591955184937, new int[] { 3, 10, 12, 3, -1 }, new int[] { 7, 10, 4, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0065854229032993317, 0.28509441018104548, -0.0609780699014664, new int[] { 8, 7, 3, 6, -1 }, new int[] { 9, 7, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0609003007411957, -0.51031768321990967, 0.0377874001860619, new int[] { 5, 5, 6, 5, -1 }, new int[] { 8, 5, 3, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029991709161549807, -0.47943010926246638, 0.0388338901102543, new int[] { 0, 5, 2, 3, -1 }, new int[] { 0, 6, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0098906438797712326, 0.40609079599380488, -0.047869648784399, new int[] { 9, 7, 3, 4, -1 }, new int[] { 10, 7, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0826889276504517, -0.70671182870864868, 0.0274877492338419, new int[] { 1, 0, 6, 15, -1 }, new int[] { 3, 0, 2, 15, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00500603998079896, 0.028208440169692, -0.52909690141677856, new int[] { 15, 1, 3, 5, -1 }, new int[] { 16, 1, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0061695030890405178, -0.0545548610389233, 0.32837980985641479, new int[] { 9, 2, 3, 10, -1 }, new int[] { 10, 2, 1, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0033914761152118444, 0.0921176671981812, -0.21637110412120819, new int[] { 8, 8, 6, 12, -1 }, new int[] { 10, 8, 2, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0026131230406463146, 0.13651019334793091, -0.13781130313873291, new int[] { 16, 4, 3, 4, -1 }, new int[] { 16, 6, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00080490659456700087, -0.0686371102929115, 0.33581069111824041, new int[] { 16, 7, 2, 2, -1 }, new int[] { 16, 7, 1, 1, 2 }, new int[] { 17, 8, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0381065085530281, 0.2944543063640595, -0.068239226937294, new int[] { 13, 0, 6, 9, -1 }, new int[] { 13, 3, 6, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.2450799052603543E-05, -0.167501300573349, 0.1217823028564453, new int[] { 7, 17, 1, 3, -1 }, new int[] { 7, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0015837959945201874, -0.0920428484678268, 0.213489904999733, new int[] { 12, 1, 4, 2, -1 }, new int[] { 12, 2, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0012924340553581715, 0.0629172325134277, -0.3617450892925263, new int[] { 17, 3, 1, 3, -1 }, new int[] { 17, 4, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00991467759013176, 0.0195340607315302, -0.8101503849029541, new int[] { 0, 16, 9, 3, -1 }, new int[] { 0, 17, 9, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017086310544982553, 0.25525239109992981, -0.0682294592261314, new int[] { 3, 6, 2, 4, -1 }, new int[] { 3, 6, 1, 2, 2 }, new int[] { 4, 8, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0021844399161636829, 0.0233140494674444, -0.84296780824661255, new int[] { 13, 18, 3, 1, -1 }, new int[] { 14, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.003424433059990406, 0.27213689684867859, -0.0763952285051346, new int[] { 0, 18, 4, 2, -1 }, new int[] { 2, 18, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00027591470279730856, -0.10742840170860291, 0.22888970375061041, new int[] { 1, 19, 2, 1, -1 }, new int[] { 2, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00060005177510902286, -0.29854211211204529, 0.0634797364473343, new int[] { 0, 18, 4, 2, -1 }, new int[] { 0, 19, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00025001438916660845, -0.27178969979286188, 0.0696150064468384, new int[] { 2, 17, 1, 3, -1 }, new int[] { 2, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.006875139195472002, -0.0571858994662762, 0.36695951223373408, new int[] { 4, 8, 3, 5, -1 }, new int[] { 5, 8, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0127619002014399, 0.0679556876420975, -0.28534150123596191, new int[] { 2, 1, 6, 7, -1 }, new int[] { 4, 1, 2, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0014752789866179228, 0.20680660009384161, -0.1005939021706581, new int[] { 3, 6, 2, 8, -1 }, new int[] { 3, 6, 1, 4, 2 }, new int[] { 4, 10, 1, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.1213881969451904, -0.0971267968416214, 0.19789619743824011, new int[] { 4, 5, 11, 10, -1 }, new int[] { 4, 10, 11, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0500812791287899, 0.28417178988456732, -0.0678799971938133, new int[] { 0, 13, 20, 2, -1 }, new int[] { 10, 13, 10, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0314549505710602, -0.0894686728715897, 0.21298420429229739, new int[] { 1, 13, 16, 3, -1 }, new int[] { 9, 13, 8, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0018878319533541799, -0.11656440049409871, 0.166635200381279, new int[] { 16, 4, 4, 4, -1 }, new int[] { 16, 4, 2, 2, 2 }, new int[] { 18, 6, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0057211960665881634, 0.23702140152454379, -0.0907766073942184, new int[] { 16, 0, 4, 12, -1 }, new int[] { 16, 0, 2, 6, 2 }, new int[] { 18, 6, 2, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00018076719425152987, 0.1795192956924439, -0.1079348027706146, new int[] { 14, 15, 3, 1, -1 }, new int[] { 15, 15, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.19761849939823151, 0.4567429125308991, -0.0404801592230797, new int[] { 3, 4, 12, 10, -1 }, new int[] { 3, 9, 12, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00023846809926908463, -0.23733009397983551, 0.0759221613407135, new int[] { 9, 18, 2, 2, -1 }, new int[] { 9, 18, 1, 1, 2 }, new int[] { 10, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00021540730085689575, 0.0816880166530609, -0.28685030341148382, new int[] { 9, 18, 2, 2, -1 }, new int[] { 9, 18, 1, 1, 2 }, new int[] { 10, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0101630901917815, -0.0412500202655792, 0.4803834855556488, new int[] { 13, 4, 2, 14, -1 }, new int[] { 13, 4, 1, 7, 2 }, new int[] { 14, 11, 1, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0072184870950877666, 0.1745858043432236, -0.1014650017023087, new int[] { 4, 2, 6, 4, -1 }, new int[] { 7, 2, 3, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.2426317036151886, 0.05342648178339, -0.32318529486656189, new int[] { 0, 0, 18, 20, -1 }, new int[] { 0, 0, 9, 10, 2 }, new int[] { 9, 10, 9, 10, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00069304101634770632, -0.1149917989969254, 0.14793939888477331, new int[] { 15, 11, 1, 2, -1 }, new int[] { 15, 12, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0035475199110805988, -0.0394249781966209, 0.53126180171966553, new int[] { 16, 10, 2, 4, -1 }, new int[] { 16, 10, 1, 2, 2 }, new int[] { 17, 12, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00021403690334409475, 0.0697538331151009, -0.27319580316543579, new int[] { 18, 17, 2, 2, -1 }, new int[] { 18, 17, 1, 1, 2 }, new int[] { 19, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00057119462871924043, 0.34369900822639471, -0.0576990097761154, new int[] { 9, 17, 1, 2, -1 }, new int[] { 9, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0066290069371461868, 0.1175848990678787, -0.1502013951539993, new int[] { 8, 4, 9, 6, -1 }, new int[] { 11, 4, 3, 6, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 18
            stage = new HaarCascadeStage(-1.0888810157775879, 17, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0265134498476982, 0.20568640530109411, -0.26473900675773621, new int[] { 6, 9, 9, 10, -1 }, new int[] { 9, 9, 3, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00977274589240551, -0.111928403377533, 0.325705498456955, new int[] { 5, 0, 5, 4, -1 }, new int[] { 5, 2, 5, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0322903506457806, -0.0985747575759888, 0.31779170036315918, new int[] { 5, 7, 11, 4, -1 }, new int[] { 5, 9, 11, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00281032407656312, 0.15213899314403531, -0.19686409831047061, new int[] { 2, 4, 2, 14, -1 }, new int[] { 3, 4, 1, 14, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0109914299100637, 0.5140765905380249, -0.0437072105705738, new int[] { 8, 6, 3, 5, -1 }, new int[] { 9, 6, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0063133831135928631, -0.0927810221910477, 0.3470247089862824, new int[] { 8, 4, 3, 9, -1 }, new int[] { 9, 4, 1, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0871059820055962, 0.030053649097681, -0.82814818620681763, new int[] { 0, 8, 20, 6, -1 }, new int[] { 0, 10, 20, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0011799359926953912, -0.12928420305252081, 0.20646120607852941, new int[] { 14, 16, 6, 1, -1 }, new int[] { 17, 16, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00093056890182197094, -0.50021439790725708, 0.0936669930815697, new int[] { 17, 18, 2, 2, -1 }, new int[] { 17, 19, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0136871701106429, -0.793581485748291, -0.0066733639687299728, new int[] { 8, 17, 6, 3, -1 }, new int[] { 10, 17, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0759174525737762, 0.30469641089439392, -0.0796558931469917, new int[] { 4, 1, 9, 15, -1 }, new int[] { 7, 1, 3, 15, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0028559709899127483, 0.20961460471153259, -0.12732550501823431, new int[] { 11, 5, 3, 12, -1 }, new int[] { 12, 5, 1, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0040231510065495968, -0.65817278623580933, 0.0506836399435997, new int[] { 0, 15, 4, 3, -1 }, new int[] { 0, 16, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0175580400973558, -0.0853826925158501, 0.36174559593200678, new int[] { 0, 0, 15, 1, -1 }, new int[] { 5, 0, 5, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0219882391393185, 0.062943696975708, -0.70896339416503906, new int[] { 6, 0, 6, 4, -1 }, new int[] { 8, 0, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0028599589131772518, 0.14683780074119571, -0.16465979814529419, new int[] { 2, 0, 9, 3, -1 }, new int[] { 5, 0, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0100308498367667, 0.49579939246177668, -0.0271883402019739, new int[] { 13, 6, 3, 7, -1 }, new int[] { 14, 6, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0069560329429805279, 0.27977779507637018, -0.0779533311724663, new int[] { 7, 6, 4, 2, -1 }, new int[] { 7, 7, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0038356808945536613, -0.58163982629776, 0.0357399396598339, new int[] { 6, 18, 6, 1, -1 }, new int[] { 8, 18, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0032647319603711367, -0.49945080280303961, 0.0469864904880524, new int[] { 18, 6, 2, 2, -1 }, new int[] { 18, 7, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.007841235026717186, 0.34532830119133, -0.0688104033470154, new int[] { 6, 4, 7, 3, -1 }, new int[] { 6, 5, 7, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-8.1718113506212831E-05, 0.1504171043634415, -0.14146679639816279, new int[] { 12, 7, 3, 1, -1 }, new int[] { 13, 7, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0032448628917336464, 0.227245107293129, -0.0928602069616318, new int[] { 15, 1, 2, 10, -1 }, new int[] { 15, 1, 1, 5, 2 }, new int[] { 16, 6, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0007856115116737783, -0.44319018721580511, 0.0578124411404133, new int[] { 0, 18, 2, 2, -1 }, new int[] { 0, 19, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0006247424753382802, 0.13952389359474179, -0.14668719470500949, new int[] { 19, 4, 1, 8, -1 }, new int[] { 19, 8, 1, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00032942948746494949, -0.29901570081710821, 0.0760667398571968, new int[] { 1, 17, 1, 3, -1 }, new int[] { 1, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0012605739757418633, -0.16125600039958951, 0.1395380049943924, new int[] { 0, 15, 6, 4, -1 }, new int[] { 0, 15, 3, 2, 2 }, new int[] { 3, 17, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0516670197248459, -0.53142839670181274, 0.0407195203006268, new int[] { 19, 0, 1, 18, -1 }, new int[] { 19, 6, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0152856195345521, -0.78206378221511841, 0.0271837692707777, new int[] { 10, 2, 6, 2, -1 }, new int[] { 12, 2, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0690298229455948, -0.0364270210266113, 0.7110251784324646, new int[] { 2, 8, 12, 2, -1 }, new int[] { 6, 8, 4, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.001452274969778955, -0.0968905165791512, 0.21668420732021329, new int[] { 16, 0, 4, 1, -1 }, new int[] { 18, 0, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0024765590205788612, 0.1164531037211418, -0.1822797954082489, new int[] { 8, 4, 2, 6, -1 }, new int[] { 8, 7, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0015134819550439715, 0.1786397993564606, -0.1221496984362602, new int[] { 14, 5, 2, 10, -1 }, new int[] { 15, 5, 1, 10, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0015099470037966967, 0.18086239695549011, -0.11446069926023481, new int[] { 13, 4, 2, 2, -1 }, new int[] { 13, 5, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0067054620012640953, 0.25106599926948547, -0.0918714627623558, new int[] { 11, 1, 3, 6, -1 }, new int[] { 11, 3, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.014075200073421, 0.1370750963687897, -0.173335000872612, new int[] { 6, 9, 12, 2, -1 }, new int[] { 10, 9, 4, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0022400720044970512, 0.40092980861663818, -0.0475768782198429, new int[] { 9, 16, 4, 2, -1 }, new int[] { 9, 17, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0197823699563742, -0.19040350615978241, 0.1492341011762619, new int[] { 5, 14, 15, 4, -1 }, new int[] { 5, 16, 15, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0026002870872616768, 0.0469717681407928, -0.43307659029960632, new int[] { 18, 16, 2, 2, -1 }, new int[] { 18, 17, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00053445628145709634, -0.43744230270385742, 0.0415201894938946, new int[] { 16, 18, 2, 2, -1 }, new int[] { 16, 18, 1, 1, 2 }, new int[] { 17, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0174665097147226, 0.65818172693252563, -0.0344474911689758, new int[] { 6, 4, 3, 8, -1 }, new int[] { 7, 4, 1, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00204255897551775, 0.39657929539680481, -0.044052429497242, new int[] { 5, 9, 3, 1, -1 }, new int[] { 6, 9, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0026661779265850782, 0.0587709583342075, -0.32806369662284851, new int[] { 0, 8, 1, 6, -1 }, new int[] { 0, 10, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0559823699295521, -0.51735472679138184, 0.0357918404042721, new int[] { 11, 2, 9, 6, -1 }, new int[] { 14, 2, 3, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0015066330088302493, 0.15123869478702551, -0.12520180642604831, new int[] { 12, 2, 6, 4, -1 }, new int[] { 14, 2, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0114723695442081, -0.62930530309677124, 0.0347043313086033, new int[] { 1, 7, 2, 4, -1 }, new int[] { 1, 9, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0234096292406321, -0.0580633506178856, 0.38668221235275269, new int[] { 13, 1, 6, 4, -1 }, new int[] { 13, 3, 6, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0023243729956448078, 0.1875409930944443, -0.0983946695923805, new int[] { 4, 10, 2, 10, -1 }, new int[] { 4, 10, 1, 5, 2 }, new int[] { 5, 15, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0290392991155386, -0.54486900568008423, 0.0409263409674168, new int[] { 2, 16, 9, 3, -1 }, new int[] { 5, 16, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.014474649913609, -0.67248392105102539, 0.0231288503855467, new int[] { 1, 2, 3, 9, -1 }, new int[] { 2, 2, 1, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0052086091600358486, -0.43271440267562872, 0.0437806509435177, new int[] { 19, 7, 1, 4, -1 }, new int[] { 19, 9, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0049382899887859821, -0.1087862029671669, 0.19342589378356931, new int[] { 14, 11, 6, 8, -1 }, new int[] { 14, 11, 3, 4, 2 }, new int[] { 17, 15, 3, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0043193930760025978, 0.2408093065023422, -0.1038080006837845, new int[] { 15, 12, 4, 6, -1 }, new int[] { 15, 12, 2, 3, 2 }, new int[] { 17, 15, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0002370566944591701, -0.087349072098732, 0.20466239750385279, new int[] { 16, 15, 2, 2, -1 }, new int[] { 16, 15, 1, 1, 2 }, new int[] { 17, 16, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00047858079778961837, 0.0456245802342892, -0.38854670524597168, new int[] { 17, 16, 2, 2, -1 }, new int[] { 17, 16, 1, 1, 2 }, new int[] { 18, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00085342838428914547, -0.550779402256012, 0.0358258895576, new int[] { 17, 16, 2, 2, -1 }, new int[] { 17, 16, 1, 1, 2 }, new int[] { 18, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.477212107507512E-05, -0.1122523993253708, 0.1750351935625076, new int[] { 2, 3, 2, 2, -1 }, new int[] { 2, 3, 1, 1, 2 }, new int[] { 3, 4, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0038445889949798584, 0.24526700377464289, -0.0811325684189796, new int[] { 10, 10, 3, 3, -1 }, new int[] { 11, 10, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0401284582912922, -0.63122707605361938, 0.0269726701080799, new int[] { 5, 9, 7, 8, -1 }, new int[] { 5, 13, 7, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00017886360001284629, 0.1985509991645813, -0.1033368036150932, new int[] { 7, 16, 2, 2, -1 }, new int[] { 7, 16, 1, 1, 2 }, new int[] { 8, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00017668239888735116, -0.0913590118288994, 0.19848720729351041, new int[] { 7, 16, 2, 2, -1 }, new int[] { 7, 16, 1, 1, 2 }, new int[] { 8, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0727633833885193, 0.0500755794346333, -0.33852630853652949, new int[] { 9, 8, 10, 3, -1 }, new int[] { 14, 8, 5, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0101816300302744, -0.0932299792766571, 0.20059590041637421, new int[] { 6, 7, 4, 8, -1 }, new int[] { 6, 7, 2, 4, 2 }, new int[] { 8, 11, 2, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0024409969337284565, 0.0646366328001022, -0.26921740174293518, new int[] { 1, 6, 4, 3, -1 }, new int[] { 1, 7, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.003622748889029026, 0.13169890642166141, -0.1251484006643295, new int[] { 6, 10, 6, 10, -1 }, new int[] { 8, 10, 2, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0013635610230267048, 0.16350460052490229, -0.106659397482872, new int[] { 4, 6, 3, 6, -1 }, new int[] { 5, 6, 1, 6, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 19
            stage = new HaarCascadeStage(-1.0408929586410523, 18, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0096991164609789848, 0.61125320196151733, -0.0662253126502037, new int[] { 3, 10, 4, 4, -1 }, new int[] { 3, 10, 2, 2, 2 }, new int[] { 5, 12, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0096426531672477722, -1, 0.0027699959464371204, new int[] { 3, 10, 4, 4, -1 }, new int[] { 3, 10, 2, 2, 2 }, new int[] { 5, 12, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0096381865441799164, 1, -0.00029904270195402205, new int[] { 3, 10, 4, 4, -1 }, new int[] { 3, 10, 2, 2, 2 }, new int[] { 5, 12, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.004255393985658884, 0.28464388847351069, -0.15540120005607611, new int[] { 14, 8, 2, 6, -1 }, new int[] { 15, 8, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.009622352197766304, -1, 0.0439991801977158, new int[] { 3, 10, 4, 4, -1 }, new int[] { 3, 10, 2, 2, 2 }, new int[] { 5, 12, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0091231241822242737, 0.86869341135025024, -0.0027267890982329845, new int[] { 3, 10, 4, 4, -1 }, new int[] { 3, 10, 2, 2, 2 }, new int[] { 5, 12, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0086240433156490326, 0.4535248875617981, -0.0860713794827461, new int[] { 12, 4, 3, 9, -1 }, new int[] { 13, 4, 1, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0089324144646525383, 0.13375559449195859, -0.26012519001960749, new int[] { 12, 3, 1, 12, -1 }, new int[] { 12, 7, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0142078101634979, 0.32077640295028692, -0.0972264111042023, new int[] { 2, 0, 18, 1, -1 }, new int[] { 8, 0, 6, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0259110108017921, -0.12964080274105069, 0.26218649744987488, new int[] { 10, 0, 10, 6, -1 }, new int[] { 10, 0, 5, 3, 2 }, new int[] { 15, 3, 5, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00020531509653665125, -0.12404280155897141, 0.2106295973062515, new int[] { 18, 16, 2, 2, -1 }, new int[] { 18, 17, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-5.4795680625829846E-05, 0.1197429969906807, -0.2320127934217453, new int[] { 3, 5, 4, 2, -1 }, new int[] { 3, 5, 2, 1, 2 }, new int[] { 5, 6, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0068555199541151524, -0.0632761269807816, 0.41044250130653381, new int[] { 11, 8, 3, 3, -1 }, new int[] { 12, 8, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0122530404478312, 0.54883331060409546, -0.0397311002016068, new int[] { 11, 7, 3, 5, -1 }, new int[] { 12, 7, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0039058770053088665, 0.24190980195999151, -0.0970960110425949, new int[] { 3, 19, 15, 1, -1 }, new int[] { 8, 19, 5, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0027560980524867773, -0.12569679319858551, 0.19456650316715241, new int[] { 8, 13, 3, 2, -1 }, new int[] { 8, 14, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0077662160620093346, 0.29765701293945312, -0.0968181565403938, new int[] { 2, 12, 8, 4, -1 }, new int[] { 2, 12, 4, 2, 2 }, new int[] { 6, 14, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00038997188676148653, 0.0621884018182755, -0.42040899395942688, new int[] { 16, 16, 2, 2, -1 }, new int[] { 16, 16, 1, 1, 2 }, new int[] { 17, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0033579880837351084, 0.0474981404840946, -0.63216882944107056, new int[] { 7, 0, 3, 2, -1 }, new int[] { 8, 0, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0167455393821001, 0.71098130941390991, -0.0391573496162891, new int[] { 6, 7, 2, 5, -1 }, new int[] { 7, 7, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0065409899689257145, -0.35043171048164368, 0.0706169530749321, new int[] { 18, 0, 2, 17, -1 }, new int[] { 19, 0, 1, 17, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00030016340315341949, 0.091902457177639, -0.24618670344352719, new int[] { 16, 16, 1, 3, -1 }, new int[] { 16, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0149189904332161, -0.0519094504415989, 0.56636041402816772, new int[] { 14, 8, 3, 7, -1 }, new int[] { 15, 8, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00048153079114854336, 0.064659558236599, -0.36590608954429632, new int[] { 10, 17, 2, 2, -1 }, new int[] { 10, 17, 1, 1, 2 }, new int[] { 11, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00030211321427486837, 0.17926569283008581, -0.1141066029667854, new int[] { 4, 9, 1, 3, -1 }, new int[] { 4, 10, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0003852141962852329, 0.10345619916915889, -0.2007246017456055, new int[] { 18, 10, 2, 3, -1 }, new int[] { 18, 11, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0080837132409214973, -0.0660734623670578, 0.30284249782562261, new int[] { 12, 1, 3, 10, -1 }, new int[] { 13, 1, 1, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0228049699217081, 0.52962350845336914, -0.0401189997792244, new int[] { 8, 12, 9, 1, -1 }, new int[] { 11, 12, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00019440450705587864, 0.0818548202514648, -0.24663360416889191, new int[] { 5, 18, 2, 2, -1 }, new int[] { 5, 18, 1, 1, 2 }, new int[] { 6, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0128480903804302, -0.34973311424255371, 0.0569162294268608, new int[] { 19, 6, 1, 9, -1 }, new int[] { 19, 9, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.001093729049898684, 0.23368680477142331, -0.0916048064827919, new int[] { 4, 7, 2, 4, -1 }, new int[] { 4, 7, 1, 2, 2 }, new int[] { 5, 9, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0010032650316134095, 0.1185218021273613, -0.1846919059753418, new int[] { 1, 4, 6, 14, -1 }, new int[] { 3, 4, 2, 14, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0446884296834469, -0.64362460374832153, 0.0303632691502571, new int[] { 10, 5, 9, 3, -1 }, new int[] { 13, 5, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00816575437784195, 0.0436746589839458, -0.4300208985805512, new int[] { 18, 7, 2, 6, -1 }, new int[] { 18, 9, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0117178102955222, 0.41781479120254522, -0.0482336990535259, new int[] { 5, 6, 2, 7, -1 }, new int[] { 6, 6, 1, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0842771306633949, 0.053461279720068, -0.379521906375885, new int[] { 10, 4, 6, 8, -1 }, new int[] { 13, 4, 3, 8, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0142118399962783, 0.0449009388685226, -0.42981499433517462, new int[] { 0, 8, 2, 9, -1 }, new int[] { 0, 11, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.001502834027633071, 0.0822276398539543, -0.24706399440765381, new int[] { 0, 7, 5, 3, -1 }, new int[] { 0, 8, 5, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0100035797804594, -0.057221669703722, 0.34609371423721308, new int[] { 8, 1, 7, 2, -1 }, new int[] { 8, 2, 7, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0090706320479512215, 0.450580894947052, -0.0427953191101551, new int[] { 7, 5, 3, 5, -1 }, new int[] { 8, 5, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0003314162022434175, 0.18336910009384161, -0.10759949684143071, new int[] { 19, 2, 1, 2, -1 }, new int[] { 19, 3, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.19723279774189, -0.030363829806447, 0.66423428058624268, new int[] { 6, 7, 10, 11, -1 }, new int[] { 11, 7, 5, 11, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0071258801035583019, -0.89225047826766968, 0.0256699901074171, new int[] { 9, 19, 6, 1, -1 }, new int[] { 11, 19, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00869213417172432, -0.0707643702626228, 0.28210529685020452, new int[] { 3, 0, 12, 1, -1 }, new int[] { 7, 0, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0089262127876281738, 0.0710782334208488, -0.30232560634613043, new int[] { 4, 1, 6, 5, -1 }, new int[] { 6, 1, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0572860091924667, 0.0509741306304932, -0.39196950197219849, new int[] { 6, 12, 12, 6, -1 }, new int[] { 10, 12, 4, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0037920880131423473, 0.0338419415056705, -0.510162889957428, new int[] { 16, 13, 2, 3, -1 }, new int[] { 16, 14, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0014508679741993547, 0.30879148840904241, -0.063845083117485, new int[] { 7, 14, 4, 2, -1 }, new int[] { 7, 15, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00098390132188797, -0.1302956938743591, 0.14604410529136661, new int[] { 7, 14, 2, 2, -1 }, new int[] { 7, 15, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017221809830516577, 0.29157009720802313, -0.0685495585203171, new int[] { 3, 10, 2, 4, -1 }, new int[] { 3, 10, 1, 2, 2 }, new int[] { 4, 12, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0109482500702143, 0.0343514084815979, -0.47702258825302118, new int[] { 0, 3, 2, 6, -1 }, new int[] { 0, 5, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-1.7176309484057128E-05, 0.16055269539356229, -0.11690840125083921, new int[] { 1, 10, 2, 2, -1 }, new int[] { 1, 10, 1, 1, 2 }, new int[] { 2, 11, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0054884208366274834, -0.43415889143943792, 0.0461062416434288, new int[] { 16, 4, 4, 3, -1 }, new int[] { 16, 5, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0030975250992923975, 0.37943339347839361, -0.05686055123806, new int[] { 5, 10, 2, 4, -1 }, new int[] { 5, 10, 1, 2, 2 }, new int[] { 6, 12, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0064182081259787083, -0.1585821062326431, 0.1233541965484619, new int[] { 5, 11, 13, 2, -1 }, new int[] { 5, 12, 13, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0118312397971749, -0.0409292913973331, 0.458789587020874, new int[] { 10, 2, 3, 11, -1 }, new int[] { 11, 2, 1, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.013540499843657, -0.0537255592644215, 0.35056120157241821, new int[] { 10, 2, 4, 4, -1 }, new int[] { 10, 4, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0025932150892913342, 0.1101052016019821, -0.16752210259437561, new int[] { 8, 8, 6, 2, -1 }, new int[] { 10, 8, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0016856270376592875, 0.0665743574500084, -0.30835020542144781, new int[] { 11, 2, 3, 3, -1 }, new int[] { 12, 2, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.002652469091117382, 0.0663184821605682, -0.2786133885383606, new int[] { 6, 18, 14, 2, -1 }, new int[] { 6, 18, 7, 1, 2 }, new int[] { 13, 19, 7, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0077341729775071144, 0.1971835941076279, -0.1078291982412338, new int[] { 17, 7, 1, 12, -1 }, new int[] { 17, 11, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0050944271497428417, 0.0853374898433685, -0.24847009778022769, new int[] { 10, 5, 10, 3, -1 }, new int[] { 10, 6, 10, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029162371065467596, -0.47476351261138922, 0.033566489815712, new int[] { 6, 1, 3, 3, -1 }, new int[] { 7, 1, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0030121419113129377, -0.0475753806531429, 0.42586800456047058, new int[] { 13, 8, 3, 1, -1 }, new int[] { 14, 8, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0031694869976490736, -0.1051945015788078, 0.17163459956645971, new int[] { 10, 14, 2, 6, -1 }, new int[] { 10, 16, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.22327560186386111, -0.0143702095374465, 0.92483651638031006, new int[] { 4, 1, 12, 14, -1 }, new int[] { 8, 1, 4, 14, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0955850481987, -0.74206638336181641, 0.0278189703822136, new int[] { 14, 1, 6, 14, -1 }, new int[] { 16, 1, 2, 14, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(3.4773729566950351E-05, -0.12765780091285711, 0.129266694188118, new int[] { 3, 16, 2, 2, -1 }, new int[] { 3, 16, 1, 1, 2 }, new int[] { 4, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.2459770308341831E-05, -0.16518579423427579, 0.1003680974245071, new int[] { 0, 16, 2, 2, -1 }, new int[] { 0, 17, 2, 1, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 20
            stage = new HaarCascadeStage(-1.0566600561141968, 19, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0065778270363807678, 0.33815258741378779, -0.15281909704208371, new int[] { 15, 6, 4, 6, -1 }, new int[] { 15, 6, 2, 3, 2 }, new int[] { 17, 9, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0010922809597104788, 0.22282369434833529, -0.19308499991893771, new int[] { 12, 5, 2, 2, -1 }, new int[] { 12, 6, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0297595895826817, 0.25959870219230652, -0.15409409999847409, new int[] { 7, 6, 6, 13, -1 }, new int[] { 9, 6, 2, 13, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0131475403904915, 0.19033810496330261, -0.16543999314308169, new int[] { 1, 9, 6, 5, -1 }, new int[] { 3, 9, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0014396329643204808, 0.200717106461525, -0.12338940054178241, new int[] { 0, 5, 3, 4, -1 }, new int[] { 0, 7, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0035928250290453434, 0.23985520005226141, -0.129221498966217, new int[] { 4, 1, 16, 2, -1 }, new int[] { 4, 1, 8, 1, 2 }, new int[] { 12, 2, 8, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0015314699849113822, -0.49014899134635931, 0.102750301361084, new int[] { 1, 18, 4, 2, -1 }, new int[] { 1, 18, 2, 1, 2 }, new int[] { 3, 19, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0062372139655053616, 0.31214639544487, -0.114056296646595, new int[] { 7, 7, 3, 4, -1 }, new int[] { 8, 7, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.033364649862051, -0.49520879983901978, 0.0513284504413605, new int[] { 3, 4, 9, 3, -1 }, new int[] { 6, 4, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0228276997804642, 0.32558828592300421, -0.0650893077254295, new int[] { 4, 6, 6, 10, -1 }, new int[] { 6, 6, 2, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0861990973353386, -0.67646330595016479, 0.0269856993108988, new int[] { 9, 0, 8, 10, -1 }, new int[] { 13, 0, 4, 10, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.002106598112732172, 0.2245243042707443, -0.12610229849815369, new int[] { 8, 0, 8, 1, -1 }, new int[] { 12, 0, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0391201488673687, 0.1132939979434013, -0.26860630512237549, new int[] { 6, 2, 8, 16, -1 }, new int[] { 6, 2, 4, 8, 2 }, new int[] { 10, 10, 4, 8, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0035082739777863026, -0.1135995984077454, 0.2564977109432221, new int[] { 14, 10, 2, 10, -1 }, new int[] { 14, 10, 1, 5, 2 }, new int[] { 15, 15, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00059289898490533233, -0.1494296938180924, 0.164098396897316, new int[] { 12, 11, 1, 2, -1 }, new int[] { 12, 12, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00071766850305721164, 0.0999056920409203, -0.21967969834804541, new int[] { 16, 0, 3, 8, -1 }, new int[] { 17, 0, 1, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0218036007136106, -0.31711721420288091, 0.082889586687088, new int[] { 14, 0, 6, 10, -1 }, new int[] { 17, 0, 3, 10, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0032962779514491558, -0.38048729300498962, 0.0608193799853325, new int[] { 16, 0, 3, 5, -1 }, new int[] { 17, 0, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0024196270387619734, -0.0960130169987679, 0.28540581464767462, new int[] { 4, 5, 11, 2, -1 }, new int[] { 4, 6, 11, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00044187481398694217, 0.2212793976068497, -0.0974349081516266, new int[] { 1, 0, 2, 1, -1 }, new int[] { 2, 0, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0034523929934948683, 0.0375531204044819, -0.57969051599502563, new int[] { 0, 0, 2, 3, -1 }, new int[] { 0, 1, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0218346007168293, 0.295621395111084, -0.0800483003258705, new int[] { 11, 6, 6, 11, -1 }, new int[] { 13, 6, 2, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00021309500152710825, 0.22814509272575381, -0.1011418998241425, new int[] { 14, 0, 3, 1, -1 }, new int[] { 15, 0, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0016166249988600612, -0.50541198253631592, 0.0447645410895348, new int[] { 19, 7, 1, 2, -1 }, new int[] { 19, 8, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0075959609821438789, 0.0459865406155586, -0.41197681427001948, new int[] { 17, 0, 3, 9, -1 }, new int[] { 18, 0, 1, 9, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0038601809646934271, -0.0865631699562073, 0.2480999976396561, new int[] { 12, 7, 3, 4, -1 }, new int[] { 13, 7, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0060622231103479862, -0.0755573734641075, 0.28433260321617132, new int[] { 0, 1, 14, 2, -1 }, new int[] { 0, 1, 7, 1, 2 }, new int[] { 7, 2, 7, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017097420059144497, -0.3529582023620606, 0.0584104992449284, new int[] { 3, 1, 3, 2, -1 }, new int[] { 4, 1, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0165155790746212, -0.0804869532585144, 0.23537430167198181, new int[] { 4, 0, 15, 2, -1 }, new int[] { 9, 0, 5, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.004846510011702776, 0.041895218193531, -0.48443049192428589, new int[] { 10, 2, 6, 1, -1 }, new int[] { 12, 2, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0311671700328588, 0.19192309677600861, -0.10268159955739981, new int[] { 9, 4, 6, 11, -1 }, new int[] { 11, 4, 2, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00061892281519249082, -0.210857704281807, 0.0938869267702103, new int[] { 2, 16, 2, 4, -1 }, new int[] { 2, 18, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0119463102892041, 0.0390961691737175, -0.62248629331588745, new int[] { 6, 17, 6, 3, -1 }, new int[] { 8, 17, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0075677200220525265, 0.15936839580535889, -0.1225078031420708, new int[] { 7, 9, 6, 2, -1 }, new int[] { 9, 9, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0537474118173122, -0.55622178316116333, 0.0411900095641613, new int[] { 6, 8, 9, 2, -1 }, new int[] { 9, 8, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0155135300010443, -0.0398268811404705, 0.62400728464126587, new int[] { 6, 6, 2, 10, -1 }, new int[] { 6, 6, 1, 5, 2 }, new int[] { 7, 11, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0015246650436893106, 0.0701386779546738, -0.30789071321487432, new int[] { 0, 11, 2, 3, -1 }, new int[] { 0, 12, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00048315100139006972, 0.178876593708992, -0.109586201608181, new int[] { 11, 15, 4, 1, -1 }, new int[] { 13, 15, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0027374739293009043, 0.0274785906076431, -0.8848956823348999, new int[] { 6, 17, 1, 2, -1 }, new int[] { 6, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0657877177000046, -0.46432140469551092, 0.0350371487438679, new int[] { 0, 0, 6, 20, -1 }, new int[] { 2, 0, 2, 20, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0012409730115905404, -0.0964792370796204, 0.28779220581054688, new int[] { 3, 10, 2, 2, -1 }, new int[] { 4, 10, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00081398809561505914, 0.11511719971895221, -0.16766160726547241, new int[] { 4, 7, 3, 5, -1 }, new int[] { 5, 7, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0239018201828003, -0.0326031893491745, 0.6001734733581543, new int[] { 3, 12, 6, 2, -1 }, new int[] { 5, 12, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0275566000491381, -0.0661373436450958, 0.29994478821754461, new int[] { 6, 15, 7, 4, -1 }, new int[] { 6, 17, 7, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00038070970913395286, -0.33881181478500372, 0.0644507706165314, new int[] { 17, 16, 2, 2, -1 }, new int[] { 17, 16, 1, 1, 2 }, new int[] { 18, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0013335429830476642, 0.14588660001754761, -0.13217620551586151, new int[] { 15, 1, 3, 16, -1 }, new int[] { 16, 1, 1, 16, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.009350799024105072, -0.51177829504013062, 0.0349694713950157, new int[] { 6, 16, 6, 3, -1 }, new int[] { 8, 16, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00762152299284935, 0.0232495293021202, -0.6961941123008728, new int[] { 15, 14, 3, 2, -1 }, new int[] { 15, 15, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-5.3407860832521692E-05, 0.23727379739284521, -0.0869107097387314, new int[] { 12, 16, 1, 2, -1 }, new int[] { 12, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0015332329785451293, 0.192284107208252, -0.1042239964008331, new int[] { 0, 2, 4, 4, -1 }, new int[] { 0, 2, 2, 2, 2 }, new int[] { 2, 4, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0043135890737175941, -0.0962195470929146, 0.25601211190223688, new int[] { 1, 1, 6, 4, -1 }, new int[] { 1, 1, 3, 2, 2 }, new int[] { 4, 3, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.000230428806389682, -0.31564751267433172, 0.0588385984301567, new int[] { 1, 18, 1, 2, -1 }, new int[] { 1, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0078411828726530075, -0.66340929269790649, 0.0245009995996952, new int[] { 4, 7, 2, 3, -1 }, new int[] { 4, 8, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.1710374057292938, 0.033831499516964, -0.45615941286087042, new int[] { 1, 0, 9, 14, -1 }, new int[] { 1, 7, 9, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.001601114054210484, 0.21574890613555911, -0.0836225301027298, new int[] { 4, 9, 2, 6, -1 }, new int[] { 4, 9, 1, 3, 2 }, new int[] { 5, 12, 1, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0105357803404331, 0.2455231994390488, -0.0823844894766808, new int[] { 3, 9, 4, 3, -1 }, new int[] { 5, 9, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0058351638726890087, -0.47807329893112183, 0.0440862216055393, new int[] { 0, 9, 2, 4, -1 }, new int[] { 0, 11, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0187061093747616, -0.60024029016494751, 0.0214100405573845, new int[] { 16, 6, 3, 10, -1 }, new int[] { 17, 6, 1, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00093307439237833023, 0.24323590099811551, -0.0741657167673111, new int[] { 16, 11, 2, 1, -1 }, new int[] { 17, 11, 1, 1, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 21
            stage = new HaarCascadeStage(-0.97693431377410889, 20, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(0.0106462296098471, -0.13861389458179471, 0.26494070887565607, new int[] { 5, 7, 4, 4, -1 }, new int[] { 5, 9, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0352982692420483, -0.075821727514267, 0.39021068811416632, new int[] { 10, 11, 9, 2, -1 }, new int[] { 13, 11, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00075638387352228165, -0.095521442592144, 0.29061999917030329, new int[] { 15, 10, 2, 2, -1 }, new int[] { 15, 10, 1, 1, 2 }, new int[] { 16, 11, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.092497706413269, -0.27704238891601562, 0.0794747024774551, new int[] { 10, 6, 6, 14, -1 }, new int[] { 10, 13, 6, 7, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0029340879991650581, 0.2298953980207443, -0.0785500109195709, new int[] { 14, 7, 3, 5, -1 }, new int[] { 15, 7, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0865358486771584, 0.47744810581207281, -0.0068231220357120037, new int[] { 6, 11, 12, 3, -1 }, new int[] { 10, 11, 4, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.4699288739357144E-05, -0.22642609477043149, 0.0881921127438545, new int[] { 17, 16, 1, 2, -1 }, new int[] { 17, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0365925207734108, 0.27353870868682861, -0.0986067429184914, new int[] { 8, 5, 5, 4, -1 }, new int[] { 8, 7, 5, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0026469118893146515, -0.0440839789807796, 0.3144528865814209, new int[] { 11, 6, 4, 2, -1 }, new int[] { 11, 7, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0044271810911595821, 0.23822729289531711, -0.0867842733860016, new int[] { 3, 4, 8, 2, -1 }, new int[] { 3, 4, 4, 1, 2 }, new int[] { 7, 5, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0051882481202483177, 0.15042769908905029, -0.1267210990190506, new int[] { 0, 8, 6, 6, -1 }, new int[] { 2, 8, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0045530400238931179, -0.0559450201690197, 0.36501631140708918, new int[] { 7, 4, 6, 2, -1 }, new int[] { 7, 5, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0145624103024602, 0.0363977700471878, -0.53559190034866333, new int[] { 7, 3, 6, 3, -1 }, new int[] { 9, 3, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.8677567469421774E-05, -0.17479629814624789, 0.11068709939718251, new int[] { 2, 17, 3, 3, -1 }, new int[] { 2, 18, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0059744901955127716, 0.31077870726585388, -0.0665302276611328, new int[] { 3, 10, 6, 1, -1 }, new int[] { 5, 10, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0058691250160336494, -0.3190149068832398, 0.063931830227375, new int[] { 7, 2, 6, 2, -1 }, new int[] { 9, 2, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0111403102055192, 0.24364790320396421, -0.0809351801872253, new int[] { 4, 11, 9, 1, -1 }, new int[] { 7, 11, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0586435310542583, -0.76083260774612427, 0.0308096297085285, new int[] { 7, 7, 11, 12, -1 }, new int[] { 7, 13, 11, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0046097282320261, -0.45315021276474, 0.0298790596425533, new int[] { 3, 2, 3, 4, -1 }, new int[] { 4, 2, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00930321030318737, 0.1451337933540344, -0.1103316992521286, new int[] { 9, 7, 9, 3, -1 }, new int[] { 12, 7, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0013253629440441728, -0.0976989567279816, 0.196464404463768, new int[] { 15, 11, 2, 6, -1 }, new int[] { 15, 11, 1, 3, 2 }, new int[] { 16, 14, 1, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0049800761044025421, 0.0336480811238289, -0.3979220986366272, new int[] { 0, 5, 5, 3, -1 }, new int[] { 0, 6, 5, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0076542161405086517, 0.090841993689537, -0.15967549383640289, new int[] { 8, 1, 6, 12, -1 }, new int[] { 10, 1, 2, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.38920590281486511, -0.6657109260559082, 0.0190288294106722, new int[] { 3, 7, 15, 13, -1 }, new int[] { 8, 7, 5, 13, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.1001966968178749, -0.57559269666671753, 0.0242827795445919, new int[] { 0, 9, 9, 9, -1 }, new int[] { 0, 12, 9, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00073541211895644665, 0.0879198014736176, -0.161953404545784, new int[] { 16, 0, 3, 8, -1 }, new int[] { 17, 0, 1, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0034802639856934547, 0.26064491271972662, -0.0602008104324341, new int[] { 16, 2, 4, 2, -1 }, new int[] { 18, 2, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0084000425413250923, -0.1097972989082336, 0.15707309544086459, new int[] { 13, 0, 6, 5, -1 }, new int[] { 16, 0, 3, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0023786011151969433, 0.0360582396388054, -0.4727719128131867, new int[] { 15, 1, 3, 2, -1 }, new int[] { 16, 1, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0073831682093441486, -0.0357563607394695, 0.4949859082698822, new int[] { 11, 8, 3, 2, -1 }, new int[] { 12, 8, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.003211562056094408, -0.1012556031346321, 0.1574798971414566, new int[] { 1, 8, 2, 12, -1 }, new int[] { 1, 8, 1, 6, 2 }, new int[] { 2, 14, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0782096683979034, -0.76627081632614136, 0.0229658298194408, new int[] { 0, 1, 6, 12, -1 }, new int[] { 2, 1, 2, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.3303989261621609E-05, -0.13414350152015689, 0.1111491993069649, new int[] { 19, 17, 1, 3, -1 }, new int[] { 19, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0096419155597686768, 0.25068029761314392, -0.0666081383824348, new int[] { 11, 3, 3, 10, -1 }, new int[] { 12, 3, 1, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0710926726460457, -0.40056818723678589, 0.0402977913618088, new int[] { 8, 1, 9, 8, -1 }, new int[] { 11, 1, 3, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00035171560011804104, 0.041861180216074, -0.32961198687553411, new int[] { 18, 16, 2, 2, -1 }, new int[] { 18, 16, 1, 1, 2 }, new int[] { 19, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0003345815057400614, -0.26029831171035772, 0.0678927376866341, new int[] { 18, 16, 2, 2, -1 }, new int[] { 18, 16, 1, 1, 2 }, new int[] { 19, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0041451421566307545, 0.2396769970655441, -0.0720933377742767, new int[] { 6, 13, 2, 6, -1 }, new int[] { 6, 15, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0031754500232636929, -0.0712352693080902, 0.241284504532814, new int[] { 9, 14, 2, 2, -1 }, new int[] { 9, 15, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0055184490047395229, 0.50320237874984741, -0.0296866800636053, new int[] { 14, 10, 2, 4, -1 }, new int[] { 14, 10, 1, 2, 2 }, new int[] { 15, 12, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00030242869979701936, 0.2487905025482178, -0.0567585788667202, new int[] { 0, 15, 2, 2, -1 }, new int[] { 0, 15, 1, 1, 2 }, new int[] { 1, 16, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0013125919504091144, 0.3174780011177063, -0.0418458618223667, new int[] { 6, 7, 2, 2, -1 }, new int[] { 6, 7, 1, 1, 2 }, new int[] { 7, 8, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00027123570907860994, -0.27042070031166082, 0.0568289905786514, new int[] { 11, 18, 2, 2, -1 }, new int[] { 11, 18, 1, 1, 2 }, new int[] { 12, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0073241777718067169, 0.27556678652763372, -0.0542529709637165, new int[] { 0, 0, 6, 4, -1 }, new int[] { 0, 0, 3, 2, 2 }, new int[] { 3, 2, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0168517101556063, -0.34852910041809082, 0.0453689992427826, new int[] { 4, 1, 6, 6, -1 }, new int[] { 6, 1, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0299021005630493, 0.0316210798919201, -0.43114370107650762, new int[] { 15, 13, 5, 4, -1 }, new int[] { 15, 15, 5, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0028902660124003887, 0.0380299612879753, -0.3702709972858429, new int[] { 7, 17, 6, 1, -1 }, new int[] { 9, 17, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0019242949783802033, 0.2480027973651886, -0.059333298355341, new int[] { 16, 19, 4, 1, -1 }, new int[] { 18, 19, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0049354149959981441, -0.0830684006214142, 0.2204380929470062, new int[] { 16, 16, 4, 4, -1 }, new int[] { 18, 16, 2, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0820756033062935, -0.0194134395569563, 0.69089287519454956, new int[] { 7, 8, 9, 4, -1 }, new int[] { 10, 8, 3, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00024699489586055279, -0.2466056942939758, 0.0647764503955841, new int[] { 16, 18, 2, 2, -1 }, new int[] { 16, 18, 1, 1, 2 }, new int[] { 17, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0018365769647061825, 0.28836160898208618, -0.0533904582262039, new int[] { 2, 9, 2, 4, -1 }, new int[] { 2, 9, 1, 2, 2 }, new int[] { 3, 11, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0049553811550140381, 0.1274082958698273, -0.1255941987037659, new int[] { 0, 3, 8, 4, -1 }, new int[] { 0, 3, 4, 2, 2 }, new int[] { 4, 5, 4, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0083086621016263962, 0.2347811013460159, -0.07167649269104, new int[] { 0, 1, 8, 1, -1 }, new int[] { 4, 1, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.10879919677972789, -0.25992238521575928, 0.0586897395551205, new int[] { 0, 5, 8, 9, -1 }, new int[] { 4, 5, 4, 9, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.009678645059466362, -0.707204282283783, 0.0187492594122887, new int[] { 7, 18, 6, 2, -1 }, new int[] { 9, 18, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0271368306130171, -0.58384227752685547, 0.021684130653739, new int[] { 0, 4, 1, 12, -1 }, new int[] { 0, 8, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0065389778465032578, -0.5974891185760498, 0.0214803107082844, new int[] { 19, 13, 1, 6, -1 }, new int[] { 19, 15, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0120956301689148, 0.13269039988517761, -0.099722720682621, new int[] { 2, 8, 6, 8, -1 }, new int[] { 4, 8, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.1677609980106354, -0.56655067205429077, 0.0321230888366699, new int[] { 0, 0, 9, 17, -1 }, new int[] { 3, 0, 3, 17, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0132625503465533, 0.1149559020996094, -0.1173838973045349, new int[] { 7, 9, 6, 8, -1 }, new int[] { 9, 9, 2, 8, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.076744519174099, -0.0314132310450077, 0.59935492277145386, new int[] { 5, 10, 9, 4, -1 }, new int[] { 8, 10, 3, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0050785229541361332, -0.0529119409620762, 0.2334239929914475, new int[] { 5, 0, 8, 3, -1 }, new int[] { 5, 1, 8, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0031800279393792152, -0.0777343884110451, 0.17652909457683561, new int[] { 16, 6, 4, 4, -1 }, new int[] { 16, 6, 2, 2, 2 }, new int[] { 18, 8, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017729829996824265, 0.19591629505157471, -0.0797521993517876, new int[] { 17, 4, 2, 8, -1 }, new int[] { 17, 4, 1, 4, 2 }, new int[] { 18, 8, 1, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00048560940194875, -0.2880037128925324, 0.0490471199154854, new int[] { 2, 16, 1, 3, -1 }, new int[] { 2, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00036554320831783116, 0.0679228976368904, -0.2249943017959595, new int[] { 2, 16, 1, 3, -1 }, new int[] { 2, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00026938671362586319, 0.16582170128822329, -0.0897440984845161, new int[] { 11, 0, 1, 3, -1 }, new int[] { 11, 1, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0786842331290245, 0.0260816793888807, -0.55693739652633667, new int[] { 11, 2, 9, 7, -1 }, new int[] { 14, 2, 3, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00073774810880422592, 0.14036870002746579, -0.1180030032992363, new int[] { 10, 2, 3, 6, -1 }, new int[] { 11, 2, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0239578299224377, 0.0304707400500774, -0.46159979701042181, new int[] { 5, 9, 15, 2, -1 }, new int[] { 5, 10, 15, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.001623908057808876, 0.2632707953453064, -0.0567653700709343, new int[] { 8, 16, 6, 2, -1 }, new int[] { 8, 17, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0009081974858418107, 0.15462459623813629, -0.1108706966042519, new int[] { 9, 16, 10, 2, -1 }, new int[] { 9, 16, 5, 1, 2 }, new int[] { 14, 17, 5, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00039806248969398439, 0.0556303709745407, -0.28331959247589111, new int[] { 9, 17, 2, 2, -1 }, new int[] { 9, 17, 1, 1, 2 }, new int[] { 10, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.002050644950941205, -0.0916048362851143, 0.17585539817810061, new int[] { 10, 15, 6, 4, -1 }, new int[] { 10, 15, 3, 2, 2 }, new int[] { 13, 17, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0267425496131182, 0.062003031373024, -0.24487000703811651, new int[] { 4, 5, 15, 12, -1 }, new int[] { 9, 5, 5, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0021497008856385946, 0.29449298977851868, -0.0532181486487389, new int[] { 11, 13, 2, 3, -1 }, new int[] { 11, 14, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0056671658530831337, -0.0642982423305511, 0.249056801199913, new int[] { 8, 13, 7, 3, -1 }, new int[] { 8, 14, 7, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(6.8317902332637459E-05, -0.1681963056325913, 0.0965485796332359, new int[] { 1, 12, 1, 2, -1 }, new int[] { 1, 13, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00017600439605303109, 0.0653080120682716, -0.24267880618572241, new int[] { 16, 18, 2, 2, -1 }, new int[] { 16, 18, 1, 1, 2 }, new int[] { 17, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0041861608624458313, -0.0979885831475258, 0.18052889406681061, new int[] { 1, 19, 18, 1, -1 }, new int[] { 7, 19, 6, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0021808340679854155, 0.192312702536583, -0.0941239297389984, new int[] { 1, 17, 6, 1, -1 }, new int[] { 4, 17, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.021730400621891, 0.0355785116553307, -0.45088538527488708, new int[] { 1, 3, 1, 12, -1 }, new int[] { 1, 9, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0147802699357271, -0.43927010893821722, 0.0317355915904045, new int[] { 0, 9, 3, 6, -1 }, new int[] { 0, 11, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0036145891062915325, 0.1981147974729538, -0.0777014195919037, new int[] { 5, 4, 3, 10, -1 }, new int[] { 6, 4, 1, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0018892709631472826, 0.0199624393135309, -0.72041720151901245, new int[] { 6, 17, 2, 1, -1 }, new int[] { 7, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0013822480104863644, 0.0984669476747513, -0.1488108038902283, new int[] { 1, 0, 6, 12, -1 }, new int[] { 3, 0, 2, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0039505911991000175, 0.1159323006868362, -0.12791970372200009, new int[] { 4, 7, 9, 2, -1 }, new int[] { 7, 7, 3, 2, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 22
            stage = new HaarCascadeStage(-1.012935996055603, 21, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0193955395370722, 0.474747508764267, -0.1172109022736549, new int[] { 6, 11, 9, 1, -1 }, new int[] { 9, 11, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.013118919916451, -0.255521297454834, 0.16378800570964811, new int[] { 17, 10, 2, 10, -1 }, new int[] { 17, 15, 2, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00051606801571324468, 0.1945261955261231, -0.17448890209198, new int[] { 4, 10, 2, 10, -1 }, new int[] { 4, 10, 1, 5, 2 }, new int[] { 5, 15, 1, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0131841599941254, 0.441814512014389, -0.0900487527251244, new int[] { 12, 3, 3, 12, -1 }, new int[] { 13, 3, 1, 12, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0034657081123441458, -0.13477090001106259, 0.18056340515613559, new int[] { 15, 3, 4, 6, -1 }, new int[] { 15, 3, 2, 3, 2 }, new int[] { 17, 6, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0062980200164020061, -0.0541649796068668, 0.36033380031585688, new int[] { 12, 8, 3, 3, -1 }, new int[] { 13, 8, 1, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0016879989998415113, -0.1999794989824295, 0.1202159970998764, new int[] { 4, 14, 2, 4, -1 }, new int[] { 4, 16, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00036039709812030196, 0.10524140298366549, -0.24116060137748721, new int[] { 6, 16, 1, 3, -1 }, new int[] { 6, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0015276849735528231, 0.28135529160499573, -0.0689648166298866, new int[] { 1, 1, 2, 3, -1 }, new int[] { 2, 1, 1, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00350335706025362, -0.0825195834040642, 0.40713590383529658, new int[] { 0, 2, 4, 1, -1 }, new int[] { 2, 2, 2, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0047337161377072334, 0.19727009534835821, -0.117101401090622, new int[] { 8, 17, 12, 3, -1 }, new int[] { 12, 17, 4, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0115571497008204, -0.56061112880706787, 0.0681709572672844, new int[] { 9, 16, 6, 4, -1 }, new int[] { 11, 16, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0274457205086946, 0.4971862137317658, -0.0623801499605179, new int[] { 4, 6, 3, 6, -1 }, new int[] { 4, 9, 3, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0528257787227631, 0.169212207198143, -0.1309355050325394, new int[] { 6, 2, 12, 9, -1 }, new int[] { 6, 5, 12, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.29849699139595032, -0.64649671316146851, 0.0400768183171749, new int[] { 6, 0, 14, 20, -1 }, new int[] { 6, 0, 7, 10, 2 }, new int[] { 13, 10, 7, 10, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00026307269581593573, 0.25127941370010382, -0.0894948393106461, new int[] { 15, 16, 2, 2, -1 }, new int[] { 15, 16, 1, 1, 2 }, new int[] { 16, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00023261709429789335, -0.0868439897894859, 0.23831979930400851, new int[] { 15, 16, 2, 2, -1 }, new int[] { 15, 16, 1, 1, 2 }, new int[] { 16, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00023631360090803355, 0.1155446022748947, -0.189363494515419, new int[] { 19, 8, 1, 3, -1 }, new int[] { 19, 9, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0020742209162563086, -0.0485948510468006, 0.57485991716384888, new int[] { 13, 4, 1, 2, -1 }, new int[] { 13, 5, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0070308889262378216, -0.54120808839797974, 0.0487437509000301, new int[] { 0, 4, 4, 2, -1 }, new int[] { 0, 5, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00826522707939148, 0.0264945197850466, -0.61728459596633911, new int[] { 19, 5, 1, 6, -1 }, new int[] { 19, 7, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00020042760297656059, -0.1176863014698029, 0.16333860158920291, new int[] { 16, 0, 2, 1, -1 }, new int[] { 17, 0, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0016470040427520871, -0.0599549189209938, 0.35179701447486877, new int[] { 13, 1, 1, 3, -1 }, new int[] { 13, 2, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00035642538568936288, -0.344202995300293, 0.0649482533335686, new int[] { 17, 17, 1, 3, -1 }, new int[] { 17, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0309358704835176, 0.19979700446128851, -0.0976936966180801, new int[] { 5, 4, 8, 8, -1 }, new int[] { 5, 4, 4, 4, 2 }, new int[] { 9, 8, 4, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00063578772824257612, -0.31481391191482538, 0.0594250410795212, new int[] { 1, 2, 2, 2, -1 }, new int[] { 1, 2, 1, 1, 2 }, new int[] { 2, 3, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0118621801957488, 0.20043690502643591, -0.0894475430250168, new int[] { 0, 0, 8, 6, -1 }, new int[] { 0, 0, 4, 3, 2 }, new int[] { 4, 3, 4, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0071508930996060371, -0.0390060618519783, 0.53327161073684692, new int[] { 6, 3, 4, 2, -1 }, new int[] { 6, 4, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0020059191156178713, -0.28469720482826227, 0.0707236081361771, new int[] { 1, 0, 3, 3, -1 }, new int[] { 1, 1, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0036412389017641544, -0.1066031977534294, 0.24944800138473511, new int[] { 6, 1, 7, 2, -1 }, new int[] { 6, 2, 7, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.13467429578304291, 0.49910080432891851, -0.0403322204947472, new int[] { 2, 6, 12, 6, -1 }, new int[] { 6, 6, 4, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.002254765946418047, 0.16851690411567691, -0.1111928001046181, new int[] { 1, 16, 9, 2, -1 }, new int[] { 4, 16, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0043842289596796036, 0.0861394926905632, -0.27431771159172058, new int[] { 7, 15, 6, 4, -1 }, new int[] { 9, 15, 2, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.007336116861552, 0.2487521022558212, -0.0959191620349884, new int[] { 6, 15, 12, 1, -1 }, new int[] { 12, 15, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00064666912658140063, 0.0674315765500069, -0.33754080533981318, new int[] { 17, 17, 1, 3, -1 }, new int[] { 17, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00022983769304119051, -0.0839030519127846, 0.24584099650383, new int[] { 17, 15, 2, 2, -1 }, new int[] { 17, 15, 1, 1, 2 }, new int[] { 18, 16, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0067039071582257748, 0.0290793292224407, -0.69055938720703125, new int[] { 3, 13, 3, 3, -1 }, new int[] { 3, 14, 3, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.073488864582032E-05, -0.15696719288825989, 0.1196542978286743, new int[] { 10, 17, 1, 3, -1 }, new int[] { 10, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.20335559546947479, -0.69506347179412842, 0.0275075193494558, new int[] { 4, 0, 14, 8, -1 }, new int[] { 11, 0, 7, 8, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0094939414411783218, -0.0874493718147278, 0.2396833002567291, new int[] { 2, 0, 12, 2, -1 }, new int[] { 6, 0, 4, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0024055240210145712, 0.21150960028171539, -0.13148930668830869, new int[] { 2, 0, 4, 3, -1 }, new int[] { 4, 0, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00011342419747961685, 0.15233789384365079, -0.12725900113582611, new int[] { 13, 1, 1, 2, -1 }, new int[] { 13, 2, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0149922100827098, -0.0341279692947865, 0.506240725517273, new int[] { 7, 5, 3, 6, -1 }, new int[] { 8, 5, 1, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00074068200774490833, 0.0487647503614426, -0.40225321054458618, new int[] { 18, 2, 2, 2, -1 }, new int[] { 18, 2, 1, 1, 2 }, new int[] { 19, 3, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0042459447868168354, 0.21554760634899139, -0.0871269926428795, new int[] { 15, 1, 2, 14, -1 }, new int[] { 16, 1, 1, 14, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00068655109498649836, -0.0754187181591988, 0.26405909657478333, new int[] { 15, 6, 2, 2, -1 }, new int[] { 15, 6, 1, 1, 2 }, new int[] { 16, 7, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0167514607310295, -0.67729032039642334, 0.0329187288880348, new int[] { 3, 1, 6, 3, -1 }, new int[] { 5, 1, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00026301678735762835, 0.22725869715213781, -0.0905348733067513, new int[] { 7, 16, 2, 2, -1 }, new int[] { 7, 16, 1, 1, 2 }, new int[] { 8, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00043398610432632267, 0.0558943785727024, -0.35592669248580933, new int[] { 5, 17, 2, 2, -1 }, new int[] { 5, 17, 1, 1, 2 }, new int[] { 6, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0201501492410898, 0.19162760674953461, -0.0949299708008766, new int[] { 9, 10, 6, 10, -1 }, new int[] { 11, 10, 2, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0144521296024323, -0.68510341644287109, 0.0254221707582474, new int[] { 10, 17, 6, 3, -1 }, new int[] { 12, 17, 2, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0211497396230698, 0.37533190846443182, -0.0514965802431107, new int[] { 14, 5, 2, 10, -1 }, new int[] { 14, 10, 2, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0211377702653408, 0.0290830805897713, -0.89430367946624756, new int[] { 11, 12, 6, 2, -1 }, new int[] { 11, 13, 6, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0011524349683895707, -0.0696949362754822, 0.27299800515174871, new int[] { 8, 1, 1, 3, -1 }, new int[] { 8, 2, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00019070580310653895, 0.1822811961174011, -0.0983670726418495, new int[] { 12, 15, 2, 2, -1 }, new int[] { 12, 15, 1, 1, 2 }, new int[] { 13, 16, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0363496318459511, -0.83693099021911621, 0.0250557605177164, new int[] { 6, 8, 6, 4, -1 }, new int[] { 6, 8, 3, 2, 2 }, new int[] { 9, 10, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0090632075443863869, 0.41463500261306763, -0.0544134490191936, new int[] { 7, 5, 3, 5, -1 }, new int[] { 8, 5, 1, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0020535490475594997, -0.19750310480594641, 0.1050689965486527, new int[] { 0, 5, 7, 3, -1 }, new int[] { 0, 6, 7, 1, 3 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion

            #region Stage 23
            stage = new HaarCascadeStage(-0.97747492790222168, 22, -1); nodes = new List<HaarFeatureNode[]>();
            nodes.Add(new[] { new HaarFeatureNode(-0.0227170195430517, 0.24288550019264221, -0.1474552005529404, new int[] { 7, 9, 6, 6, -1 }, new int[] { 9, 9, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0255059506744146, -0.28551739454269409, 0.1083720996975899, new int[] { 5, 7, 8, 8, -1 }, new int[] { 5, 11, 8, 4, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0026640091091394424, 0.2927573025226593, -0.1037271022796631, new int[] { 4, 9, 2, 6, -1 }, new int[] { 4, 9, 1, 3, 2 }, new int[] { 5, 12, 1, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0038115289062261581, 0.2142689973115921, -0.13811139762401581, new int[] { 10, 11, 6, 1, -1 }, new int[] { 12, 11, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0167326908558607, 0.26550260186195368, -0.0439113304018974, new int[] { 13, 6, 6, 11, -1 }, new int[] { 15, 6, 2, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00049277010839432478, 0.02110455930233, -0.42971360683441162, new int[] { 8, 17, 2, 2, -1 }, new int[] { 8, 17, 1, 1, 2 }, new int[] { 9, 18, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0366911105811596, 0.53992420434951782, -0.0436488017439842, new int[] { 4, 12, 12, 1, -1 }, new int[] { 8, 12, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0012615970335900784, -0.12933869659900671, 0.1663877069950104, new int[] { 11, 17, 3, 2, -1 }, new int[] { 11, 18, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.008410685695707798, -0.94698411226272583, 0.0214658491313457, new int[] { 8, 17, 6, 1, -1 }, new int[] { 10, 17, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0649027228355408, -0.0717277601361275, 0.26613479852676392, new int[] { 4, 1, 14, 6, -1 }, new int[] { 4, 3, 14, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0303050000220537, -0.0827824920415878, 0.27694320678710938, new int[] { 14, 2, 2, 12, -1 }, new int[] { 14, 8, 2, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0025875340215861797, -0.1296616941690445, 0.17756630480289459, new int[] { 12, 13, 3, 2, -1 }, new int[] { 12, 14, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00702404510229826, -0.64243179559707642, 0.0399432107806206, new int[] { 6, 1, 6, 1, -1 }, new int[] { 8, 1, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0010099769569933415, 0.14176610112190249, -0.1165997013449669, new int[] { 10, 6, 6, 1, -1 }, new int[] { 12, 6, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-4.1179071558872238E-05, 0.15687669813632971, -0.11127340048551559, new int[] { 3, 19, 2, 1, -1 }, new int[] { 4, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00047293151146732271, -0.33554559946060181, 0.0459777303040028, new int[] { 18, 16, 2, 2, -1 }, new int[] { 18, 16, 1, 1, 2 }, new int[] { 19, 17, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0017178079579025507, 0.1695290952920914, -0.1057806983590126, new int[] { 16, 11, 3, 7, -1 }, new int[] { 17, 11, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0133331697434187, -0.58257812261581421, 0.0309784300625324, new int[] { 19, 5, 1, 6, -1 }, new int[] { 19, 8, 1, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0018783430568873882, 0.14266879856586459, -0.111312597990036, new int[] { 9, 8, 4, 3, -1 }, new int[] { 9, 9, 4, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0065765981562435627, 0.27561360597610468, -0.0531003288924694, new int[] { 16, 8, 4, 4, -1 }, new int[] { 16, 8, 2, 2, 2 }, new int[] { 18, 10, 2, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-7.7210381277836859E-05, 0.13240240514278409, -0.111677996814251, new int[] { 2, 8, 2, 2, -1 }, new int[] { 2, 8, 1, 1, 2 }, new int[] { 3, 9, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0219685398042202, -0.0269681606441736, 0.50067168474197388, new int[] { 3, 5, 6, 4, -1 }, new int[] { 3, 5, 3, 2, 2 }, new int[] { 6, 7, 3, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.027445750311017, -0.240867406129837, 0.0604782700538635, new int[] { 2, 3, 8, 16, -1 }, new int[] { 2, 3, 4, 8, 2 }, new int[] { 6, 11, 4, 8, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(7.8305849456228316E-05, -0.13334889709949491, 0.1012346968054771, new int[] { 17, 17, 1, 3, -1 }, new int[] { 17, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0701906830072403, -0.0548637807369232, 0.24809940159320831, new int[] { 7, 2, 8, 11, -1 }, new int[] { 11, 2, 4, 11, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0719021335244179, -0.3784669041633606, 0.0422109998762608, new int[] { 13, 3, 6, 14, -1 }, new int[] { 16, 3, 3, 14, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.10780979692935939, -0.37486588954925543, 0.0428334400057793, new int[] { 0, 9, 18, 2, -1 }, new int[] { 6, 9, 6, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0014364200178533793, 0.0804763585329056, -0.17263789474964139, new int[] { 6, 10, 14, 3, -1 }, new int[] { 6, 11, 14, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.068289190530777, -0.0355957895517349, 0.40761318802833563, new int[] { 10, 9, 9, 3, -1 }, new int[] { 13, 9, 3, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00680371792986989, 0.19233790040016169, -0.0823680236935616, new int[] { 3, 5, 4, 6, -1 }, new int[] { 3, 5, 2, 3, 2 }, new int[] { 5, 8, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00056193489581346512, 0.13057120144367221, -0.14355149865150449, new int[] { 3, 7, 3, 7, -1 }, new int[] { 4, 7, 1, 7, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0582766495645046, -0.30125439167022711, 0.0528196506202221, new int[] { 2, 8, 11, 6, -1 }, new int[] { 2, 10, 11, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0061205718666315079, 0.22043900191783911, -0.0756917521357536, new int[] { 8, 9, 6, 3, -1 }, new int[] { 8, 10, 6, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0135943097993732, -0.39049360156059271, 0.0418571084737778, new int[] { 3, 3, 3, 11, -1 }, new int[] { 4, 3, 1, 11, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0013626200379803777, -0.0953634232282639, 0.14970320463180539, new int[] { 0, 19, 6, 1, -1 }, new int[] { 3, 19, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00015074219845701009, -0.23945580422878271, 0.0647983327507973, new int[] { 18, 18, 1, 2, -1 }, new int[] { 18, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.077414259314537, 0.55941981077194214, -0.0245168805122375, new int[] { 8, 0, 12, 6, -1 }, new int[] { 8, 0, 6, 3, 2 }, new int[] { 14, 3, 6, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00092117872554808855, 0.0549288615584373, -0.2793481051921845, new int[] { 19, 5, 1, 3, -1 }, new int[] { 19, 6, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.001025078003294766, -0.0621673092246056, 0.249763697385788, new int[] { 5, 8, 2, 1, -1 }, new int[] { 6, 8, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.000811747508123517, 0.23437939584255221, -0.0657258108258247, new int[] { 13, 11, 2, 1, -1 }, new int[] { 14, 11, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0834310203790665, 0.0509548000991344, -0.31020981073379522, new int[] { 3, 6, 15, 13, -1 }, new int[] { 8, 6, 5, 13, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0092014456167817116, -0.39242538809776312, 0.0329269506037235, new int[] { 4, 3, 6, 2, -1 }, new int[] { 6, 3, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00029086650465615094, -0.31039750576019293, 0.0497118197381496, new int[] { 0, 18, 1, 2, -1 }, new int[] { 0, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00775768980383873, -0.0440407507121563, 0.3643135130405426, new int[] { 7, 8, 2, 6, -1 }, new int[] { 8, 8, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.12466090172529221, -0.819570779800415, 0.0191506408154964, new int[] { 3, 0, 6, 19, -1 }, new int[] { 5, 0, 2, 19, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0132425501942635, 0.0389888398349285, -0.33230680227279658, new int[] { 3, 1, 6, 5, -1 }, new int[] { 5, 1, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0066770128905773163, -0.357901394367218, 0.0404602102935314, new int[] { 17, 14, 3, 6, -1 }, new int[] { 17, 16, 3, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0027479929849505424, 0.2525390088558197, -0.0564278215169907, new int[] { 17, 13, 2, 6, -1 }, new int[] { 18, 13, 1, 6, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00082659651525318623, -0.07198865711689, 0.22780479490756991, new int[] { 17, 18, 2, 2, -1 }, new int[] { 18, 18, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0501534007489681, -0.630364716053009, 0.027462050318718, new int[] { 11, 14, 9, 4, -1 }, new int[] { 14, 14, 3, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0074203149415552616, -0.0666107162833214, 0.27787339687347412, new int[] { 15, 8, 4, 6, -1 }, new int[] { 15, 8, 2, 3, 2 }, new int[] { 17, 11, 2, 3, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00067951780511066318, -0.36327061057090759, 0.0427954308688641, new int[] { 1, 16, 1, 3, -1 }, new int[] { 1, 17, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0019305750029161573, 0.14196230471134191, -0.1075998023152351, new int[] { 7, 0, 3, 14, -1 }, new int[] { 8, 0, 1, 14, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00038132671033963561, 0.2159176021814346, -0.0702026635408401, new int[] { 12, 0, 2, 1, -1 }, new int[] { 13, 0, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0709903463721275, 0.4526660144329071, -0.0407504811882973, new int[] { 7, 9, 6, 5, -1 }, new int[] { 10, 9, 3, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0533680804073811, -0.67674058675765991, 0.0192883405834436, new int[] { 15, 5, 4, 9, -1 }, new int[] { 17, 5, 2, 9, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0200648494064808, -0.4336543083190918, 0.0318532884120941, new int[] { 11, 0, 6, 6, -1 }, new int[] { 13, 0, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.001197636011056602, -0.0265598706901073, 0.50797182321548462, new int[] { 16, 15, 2, 2, -1 }, new int[] { 16, 15, 1, 1, 2 }, new int[] { 17, 16, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00022697300300933421, 0.18012599647045141, -0.0836065486073494, new int[] { 16, 15, 2, 2, -1 }, new int[] { 16, 15, 1, 1, 2 }, new int[] { 17, 16, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0152626996859908, -0.20238929986953741, 0.067422017455101, new int[] { 13, 2, 2, 18, -1 }, new int[] { 13, 11, 2, 9, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.20811769366264341, 0.66943860054016113, -0.0224521104246378, new int[] { 8, 4, 8, 10, -1 }, new int[] { 8, 9, 8, 5, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0015514369588345289, -0.0751218423247337, 0.17326919734478, new int[] { 8, 3, 2, 3, -1 }, new int[] { 8, 4, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0529240109026432, 0.24992519617080691, -0.0628791674971581, new int[] { 11, 1, 6, 9, -1 }, new int[] { 11, 4, 6, 3, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0216488502919674, -0.29194280505180359, 0.0526144914329052, new int[] { 15, 4, 5, 6, -1 }, new int[] { 15, 6, 5, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00022905069636180997, -0.2211730033159256, 0.0631683394312859, new int[] { 12, 18, 2, 2, -1 }, new int[] { 12, 18, 1, 1, 2 }, new int[] { 13, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(5.0170070608146489E-05, -0.11510709673166281, 0.1161144003272057, new int[] { 1, 17, 1, 3, -1 }, new int[] { 1, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00016416069411206991, 0.1587152034044266, -0.0826006010174751, new int[] { 12, 19, 2, 1, -1 }, new int[] { 13, 19, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0120032895356417, 0.1221809014678001, -0.112296998500824, new int[] { 8, 10, 6, 6, -1 }, new int[] { 10, 10, 2, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0177841000258923, -0.35072788596153259, 0.0313419215381145, new int[] { 14, 2, 6, 5, -1 }, new int[] { 16, 2, 2, 5, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0063457582145929337, 0.13078069686889651, -0.1057441011071205, new int[] { 9, 5, 2, 6, -1 }, new int[] { 9, 7, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00079523242311552167, 0.17204670608043671, -0.086001992225647, new int[] { 1, 15, 2, 2, -1 }, new int[] { 2, 15, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00031029590172693133, -0.28433170914649958, 0.0518171191215515, new int[] { 18, 17, 1, 3, -1 }, new int[] { 18, 18, 1, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0170537102967501, 0.39242428541183472, -0.0401432700455189, new int[] { 10, 14, 4, 6, -1 }, new int[] { 10, 16, 4, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0046504959464073181, -0.031837560236454, 0.4123769998550415, new int[] { 9, 7, 3, 2, -1 }, new int[] { 10, 7, 1, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0103587601333857, -0.56993198394775391, 0.0292483791708946, new int[] { 6, 9, 6, 2, -1 }, new int[] { 6, 9, 3, 1, 2 }, new int[] { 9, 10, 3, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0221962407231331, -0.45605289936065668, 0.0262859892100096, new int[] { 0, 2, 1, 12, -1 }, new int[] { 0, 6, 1, 4, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0070536029525101185, 0.1599832028150559, -0.091594859957695, new int[] { 4, 0, 15, 1, -1 }, new int[] { 9, 0, 5, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00057094299700111151, -0.1407632976770401, 0.1028741970658302, new int[] { 9, 0, 8, 2, -1 }, new int[] { 9, 0, 4, 1, 2 }, new int[] { 13, 1, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0022152599412947893, 0.16593599319458011, -0.0852739885449409, new int[] { 12, 2, 8, 1, -1 }, new int[] { 16, 2, 4, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0280848909169436, 0.27022340893745422, -0.0558738112449646, new int[] { 7, 1, 10, 6, -1 }, new int[] { 7, 3, 10, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.0021515151020139456, 0.0424728915095329, -0.32005849480628967, new int[] { 18, 6, 2, 3, -1 }, new int[] { 18, 7, 2, 1, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00029733829433098435, 0.16177169978618619, -0.0851155892014503, new int[] { 4, 12, 2, 2, -1 }, new int[] { 4, 12, 1, 1, 2 }, new int[] { 5, 13, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0166947804391384, -0.42858770489692688, 0.0305416099727154, new int[] { 6, 6, 6, 2, -1 }, new int[] { 8, 6, 2, 2, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.1198299005627632, -0.0162772908806801, 0.79846781492233276, new int[] { 0, 9, 9, 6, -1 }, new int[] { 3, 9, 3, 6, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.000354994204826653, 0.1593593955039978, -0.0832728818058968, new int[] { 17, 18, 2, 2, -1 }, new int[] { 18, 18, 1, 2, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0182262696325779, 0.19527280330657959, -0.0739398896694183, new int[] { 11, 2, 6, 16, -1 }, new int[] { 13, 2, 2, 16, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.00040238600922748446, 0.0791018083691597, -0.20806129276752469, new int[] { 2, 4, 15, 13, -1 }, new int[] { 7, 4, 5, 13, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00040892060496844351, 0.1003663018345833, -0.1512821018695831, new int[] { 16, 2, 3, 10, -1 }, new int[] { 17, 2, 1, 10, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00095368112670257688, -0.0730116665363312, 0.21752020716667181, new int[] { 6, 10, 2, 1, -1 }, new int[] { 7, 10, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.4308179914951325, -0.0274506993591785, 0.570615828037262, new int[] { 1, 1, 18, 16, -1 }, new int[] { 10, 1, 9, 16, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(0.00053564831614494324, 0.11587540060281749, -0.12790560722351069, new int[] { 14, 4, 3, 15, -1 }, new int[] { 15, 4, 1, 15, 3 } ) });
            nodes.Add(new[] { new HaarFeatureNode(2.4430730263702571E-05, -0.16816629469394681, 0.0804499834775925, new int[] { 19, 13, 1, 2, -1 }, new int[] { 19, 14, 1, 1, 2 } ) });
            nodes.Add(new[] { new HaarFeatureNode(-0.0553456507623196, 0.4533894956111908, -0.0312227793037891, new int[] { 2, 6, 5, 8, -1 }, new int[] { 2, 10, 5, 4, 2 } ) });
            stage.Trees = nodes.ToArray(); stages.Add(stage);
            #endregion


            Stages = stages.ToArray();
         }
    }
}
